<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_daos__fs__sys_8h">
<title>src/include/daos_fs_sys.h File Reference</title>
<indexterm><primary>src/include/daos_fs_sys.h</primary></indexterm>
<programlisting>#include &lt;dirent.h&gt;
#include &lt;daos.h&gt;
#include &lt;daos_fs.h&gt;
</programlisting><simplesect>
    <title>Macros    </title>
        <itemizedlist>
            <listitem><para>#define <link linkend="_daos__fs__sys_8h_1a85d229971bbb8fe4edb4f9f5578371b3">DFS_SYS_NO_CACHE</link>   1</para>
</listitem>
            <listitem><para>#define <link linkend="_daos__fs__sys_8h_1a406769dad3ba98e6407d138f523f28ea">DFS_SYS_NO_LOCK</link>   2</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Typedefs    </title>
        <itemizedlist>
            <listitem><para>typedef struct dfs_sys <link linkend="_daos__fs__sys_8h_1a7936717f4065ba9dc267776eac7ced2e">dfs_sys_t</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>int <link linkend="_daos__fs__sys_8h_1aa4310faf0b81eb691dfe58803a6e59f3">dfs_sys_mount</link> (<link linkend="_structdaos__handle__t">daos_handle_t</link> poh, <link linkend="_structdaos__handle__t">daos_handle_t</link> coh, int mflags, int sflags, <link linkend="_daos__fs__sys_8h_1a7936717f4065ba9dc267776eac7ced2e">dfs_sys_t</link> **dfs_sys)</para>
</listitem>
            <listitem><para>int <link linkend="_daos__fs__sys_8h_1a8b61b29527f80c1dac4cbd99da19b68b">dfs_sys_umount</link> (<link linkend="_daos__fs__sys_8h_1a7936717f4065ba9dc267776eac7ced2e">dfs_sys_t</link> *dfs_sys)</para>
</listitem>
            <listitem><para>int <link linkend="_daos__fs__sys_8h_1acd0941409a44ecc831baceaa64da04ae">dfs_sys_local2global</link> (<link linkend="_daos__fs__sys_8h_1a7936717f4065ba9dc267776eac7ced2e">dfs_sys_t</link> *dfs_sys, d_iov_t *glob)</para>
</listitem>
            <listitem><para>int <link linkend="_daos__fs__sys_8h_1a70c1910e7375c989758d7c62fb3c6636">dfs_sys_global2local</link> (<link linkend="_structdaos__handle__t">daos_handle_t</link> poh, <link linkend="_structdaos__handle__t">daos_handle_t</link> coh, int mflags, int sflags, d_iov_t glob, <link linkend="_daos__fs__sys_8h_1a7936717f4065ba9dc267776eac7ced2e">dfs_sys_t</link> **dfs_sys)</para>
</listitem>
            <listitem><para>int <link linkend="_daos__fs__sys_8h_1a55700f92fe0af5458af843e0e5f828e2">dfs_sys2base</link> (<link linkend="_daos__fs__sys_8h_1a7936717f4065ba9dc267776eac7ced2e">dfs_sys_t</link> *dfs_sys, <link linkend="_group___filesystem_1gafc65ec05277f052daed166445bf3c828">dfs_t</link> **dfs)</para>
</listitem>
            <listitem><para>int <link linkend="_daos__fs__sys_8h_1a821528212d0ade018e43ce68c93ff425">dfs_sys_access</link> (<link linkend="_daos__fs__sys_8h_1a7936717f4065ba9dc267776eac7ced2e">dfs_sys_t</link> *dfs_sys, const char *path, int mask, int flags)</para>
</listitem>
            <listitem><para>int <link linkend="_daos__fs__sys_8h_1a3d77734aaa37862e4a7aa6eba99bdedf">dfs_sys_chmod</link> (<link linkend="_daos__fs__sys_8h_1a7936717f4065ba9dc267776eac7ced2e">dfs_sys_t</link> *dfs_sys, const char *path, mode_t mode)</para>
</listitem>
            <listitem><para>int <link linkend="_daos__fs__sys_8h_1adc7fe0314eae59805607c7cf7c196dc9">dfs_sys_setattr</link> (<link linkend="_daos__fs__sys_8h_1a7936717f4065ba9dc267776eac7ced2e">dfs_sys_t</link> *dfs_sys, const char *path, struct stat *stbuf, int flags, int sflags)</para>
</listitem>
            <listitem><para>int <link linkend="_daos__fs__sys_8h_1ace808c585382babaa2f3984f9604aa6c">dfs_sys_utimens</link> (<link linkend="_daos__fs__sys_8h_1a7936717f4065ba9dc267776eac7ced2e">dfs_sys_t</link> *dfs_sys, const char *path, const struct timespec times[2], int flags)</para>
</listitem>
            <listitem><para>int <link linkend="_daos__fs__sys_8h_1a06d9c1cd0015cccc4aec3a6c94874562">dfs_sys_stat</link> (<link linkend="_daos__fs__sys_8h_1a7936717f4065ba9dc267776eac7ced2e">dfs_sys_t</link> *dfs_sys, const char *path, int flags, struct stat *stbuf)</para>
</listitem>
            <listitem><para>int <link linkend="_daos__fs__sys_8h_1a4b7e92840dbed47865c7d6353a59943a">dfs_sys_mknod</link> (<link linkend="_daos__fs__sys_8h_1a7936717f4065ba9dc267776eac7ced2e">dfs_sys_t</link> *dfs_sys, const char *path, mode_t mode, <link linkend="_group___obj_class_1ga697f542a81cf2b46e3642a31ad289728">daos_oclass_id_t</link> cid, <link linkend="_group___types_1gaef45c835fcfbd5f969030fd7c854eb8a">daos_size_t</link> chunk_size)</para>
</listitem>
            <listitem><para>int <link linkend="_daos__fs__sys_8h_1ae66a3eb29fe2aec32a8e2321b9f5c305">dfs_sys_listxattr</link> (<link linkend="_daos__fs__sys_8h_1a7936717f4065ba9dc267776eac7ced2e">dfs_sys_t</link> *dfs_sys, const char *path, char *list, <link linkend="_group___types_1gaef45c835fcfbd5f969030fd7c854eb8a">daos_size_t</link> *size, int flags)</para>
</listitem>
            <listitem><para>int <link linkend="_daos__fs__sys_8h_1a235bc71c01ad4acdd7434018f36cc63f">dfs_sys_getxattr</link> (<link linkend="_daos__fs__sys_8h_1a7936717f4065ba9dc267776eac7ced2e">dfs_sys_t</link> *dfs_sys, const char *path, const char *name, void *value, <link linkend="_group___types_1gaef45c835fcfbd5f969030fd7c854eb8a">daos_size_t</link> *size, int flags)</para>
</listitem>
            <listitem><para>int <link linkend="_daos__fs__sys_8h_1abbbcbdf9413593c201447ec664ef9ee5">dfs_sys_setxattr</link> (<link linkend="_daos__fs__sys_8h_1a7936717f4065ba9dc267776eac7ced2e">dfs_sys_t</link> *dfs_sys, const char *path, const char *name, const void *value, <link linkend="_group___types_1gaef45c835fcfbd5f969030fd7c854eb8a">daos_size_t</link> size, int flags, int sflags)</para>
</listitem>
            <listitem><para>int <link linkend="_daos__fs__sys_8h_1aa945c6fcd1203d38881b4ed48af8d15d">dfs_sys_removexattr</link> (<link linkend="_daos__fs__sys_8h_1a7936717f4065ba9dc267776eac7ced2e">dfs_sys_t</link> *dfs_sys, const char *path, const char *name, int flags)</para>
</listitem>
            <listitem><para>int <link linkend="_daos__fs__sys_8h_1a4bc1c2c98f3b0b3925c91271077467f2">dfs_sys_readlink</link> (<link linkend="_daos__fs__sys_8h_1a7936717f4065ba9dc267776eac7ced2e">dfs_sys_t</link> *dfs_sys, const char *path, char *buf, <link linkend="_group___types_1gaef45c835fcfbd5f969030fd7c854eb8a">daos_size_t</link> *size)</para>
</listitem>
            <listitem><para>int <link linkend="_daos__fs__sys_8h_1a94676aa5564f92f615f8a8c44a32453f">dfs_sys_symlink</link> (<link linkend="_daos__fs__sys_8h_1a7936717f4065ba9dc267776eac7ced2e">dfs_sys_t</link> *dfs_sys, const char *target, const char *path)</para>
</listitem>
            <listitem><para>int <link linkend="_daos__fs__sys_8h_1a36e34a03096ab25e088aed43be4abafb">dfs_sys_open</link> (<link linkend="_daos__fs__sys_8h_1a7936717f4065ba9dc267776eac7ced2e">dfs_sys_t</link> *dfs_sys, const char *path, mode_t mode, int flags, <link linkend="_group___obj_class_1ga697f542a81cf2b46e3642a31ad289728">daos_oclass_id_t</link> cid, <link linkend="_group___types_1gaef45c835fcfbd5f969030fd7c854eb8a">daos_size_t</link> chunk_size, const char *value, <link linkend="_group___filesystem_1ga51617a5017d3365ee5faf1452daed4b2">dfs_obj_t</link> **obj)</para>
</listitem>
            <listitem><para>int <link linkend="_daos__fs__sys_8h_1a4a0f7bcac0468d647920af6a7d737bbc">dfs_sys_close</link> (<link linkend="_group___filesystem_1ga51617a5017d3365ee5faf1452daed4b2">dfs_obj_t</link> *obj)</para>
</listitem>
            <listitem><para>int <link linkend="_daos__fs__sys_8h_1a0f63c60fbaa68948b6e547539a70ec4c">dfs_sys_read</link> (<link linkend="_daos__fs__sys_8h_1a7936717f4065ba9dc267776eac7ced2e">dfs_sys_t</link> *dfs_sys, <link linkend="_group___filesystem_1ga51617a5017d3365ee5faf1452daed4b2">dfs_obj_t</link> *obj, void *buf, daos_off_t off, <link linkend="_group___types_1gaef45c835fcfbd5f969030fd7c854eb8a">daos_size_t</link> *size, <link linkend="_group___types_1ga7e4095443fd42c3411ed0bd000cc9c20">daos_event_t</link> *ev)</para>
</listitem>
            <listitem><para>int <link linkend="_daos__fs__sys_8h_1a21b1fc9f0d51e54c566f62be95097c84">dfs_sys_write</link> (<link linkend="_daos__fs__sys_8h_1a7936717f4065ba9dc267776eac7ced2e">dfs_sys_t</link> *dfs_sys, <link linkend="_group___filesystem_1ga51617a5017d3365ee5faf1452daed4b2">dfs_obj_t</link> *obj, const void *buf, daos_off_t off, <link linkend="_group___types_1gaef45c835fcfbd5f969030fd7c854eb8a">daos_size_t</link> *size, <link linkend="_group___types_1ga7e4095443fd42c3411ed0bd000cc9c20">daos_event_t</link> *ev)</para>
</listitem>
            <listitem><para>int <link linkend="_daos__fs__sys_8h_1a18b52b035cb2f0275f5d1921545480f3">dfs_sys_punch</link> (<link linkend="_daos__fs__sys_8h_1a7936717f4065ba9dc267776eac7ced2e">dfs_sys_t</link> *dfs_sys, const char *path, daos_off_t offset, daos_off_t len)</para>
</listitem>
            <listitem><para>int <link linkend="_daos__fs__sys_8h_1ad28b5347d4a4a226335580baec031ae9">dfs_sys_remove</link> (<link linkend="_daos__fs__sys_8h_1a7936717f4065ba9dc267776eac7ced2e">dfs_sys_t</link> *dfs_sys, const char *path, bool force, <link linkend="_structdaos__obj__id__t">daos_obj_id_t</link> *oid)</para>
</listitem>
            <listitem><para>int <link linkend="_daos__fs__sys_8h_1a3e9ddefd2aebf07acbbcdb5d12073380">dfs_sys_remove_type</link> (<link linkend="_daos__fs__sys_8h_1a7936717f4065ba9dc267776eac7ced2e">dfs_sys_t</link> *dfs_sys, const char *path, bool force, mode_t mode, <link linkend="_structdaos__obj__id__t">daos_obj_id_t</link> *oid)</para>
</listitem>
            <listitem><para>int <link linkend="_daos__fs__sys_8h_1a407bac4d155b04591490d6a67f743baf">dfs_sys_mkdir</link> (<link linkend="_daos__fs__sys_8h_1a7936717f4065ba9dc267776eac7ced2e">dfs_sys_t</link> *dfs_sys, const char *dir, mode_t mode, <link linkend="_group___obj_class_1ga697f542a81cf2b46e3642a31ad289728">daos_oclass_id_t</link> cid)</para>
</listitem>
            <listitem><para>int <link linkend="_daos__fs__sys_8h_1a596764235e708b078539d39893e39853">dfs_sys_opendir</link> (<link linkend="_daos__fs__sys_8h_1a7936717f4065ba9dc267776eac7ced2e">dfs_sys_t</link> *dfs_sys, const char *dir, int flags, DIR **dirp)</para>
</listitem>
            <listitem><para>int <link linkend="_daos__fs__sys_8h_1a96af25c135edcea67877c748e8529b95">dfs_sys_closedir</link> (DIR *dirp)</para>
</listitem>
            <listitem><para>int <link linkend="_daos__fs__sys_8h_1a0725233d7d2ab701f83231968b26d63c">dfs_sys_readdir</link> (<link linkend="_daos__fs__sys_8h_1a7936717f4065ba9dc267776eac7ced2e">dfs_sys_t</link> *dfs_sys, DIR *dirp, struct dirent **dirent)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>(C) Copyright 2018-2021 Intel Corporation.</para>

<para>SPDX-License-Identifier: BSD-2-Clause-Patent</para>

<para>DAOS File System &quot;Sys&quot; API</para>

<para>The DFS Sys API provides a simplified layer directly on top of the DFS API that is more similar to the equivalent POSIX libraries. While the DFS Sys API stands on its own, the DFS API can be used directly by getting the DFS Object with <link linkend="_daos__fs__sys_8h_1a55700f92fe0af5458af843e0e5f828e2">dfs_sys2base()</link>. </para>
</section>
<section>
<title>Macro Definition Documentation</title>
<anchor xml:id="_daos__fs__sys_8h_1a85d229971bbb8fe4edb4f9f5578371b3"/>    <section>
    <title>DFS_SYS_NO_CACHE</title>
<indexterm><primary>DFS_SYS_NO_CACHE</primary><secondary>daos_fs_sys.h</secondary></indexterm>
<indexterm><primary>daos_fs_sys.h</primary><secondary>DFS_SYS_NO_CACHE</secondary></indexterm>
<para><computeroutput>#define DFS_SYS_NO_CACHE   1</computeroutput></para>
<para>Mount flags for dfs_sys_mount. By default, mount with caching and locking turned on. Turn off directory caching </para>
<para>
Definition at line 29 of file daos_fs_sys.h.</para>
    </section><anchor xml:id="_daos__fs__sys_8h_1a406769dad3ba98e6407d138f523f28ea"/>    <section>
    <title>DFS_SYS_NO_LOCK</title>
<indexterm><primary>DFS_SYS_NO_LOCK</primary><secondary>daos_fs_sys.h</secondary></indexterm>
<indexterm><primary>daos_fs_sys.h</primary><secondary>DFS_SYS_NO_LOCK</secondary></indexterm>
<para><computeroutput>#define DFS_SYS_NO_LOCK   2</computeroutput></para>
<para>Turn off locking. Useful for single-threaded applications. </para>
<para>
Definition at line 30 of file daos_fs_sys.h.</para>
</section>
</section>
<section>
<title>Typedef Documentation</title>
<anchor xml:id="_daos__fs__sys_8h_1a7936717f4065ba9dc267776eac7ced2e"/>    <section>
    <title>dfs_sys_t</title>
<indexterm><primary>dfs_sys_t</primary><secondary>daos_fs_sys.h</secondary></indexterm>
<indexterm><primary>daos_fs_sys.h</primary><secondary>dfs_sys_t</secondary></indexterm>
<para><computeroutput>typedef struct dfs_sys <link linkend="_daos__fs__sys_8h_1a7936717f4065ba9dc267776eac7ced2e">dfs_sys_t</link></computeroutput></para>
<para>struct holding attributes for the dfs_sys calls </para>
<para>
Definition at line 33 of file daos_fs_sys.h.</para>
</section>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_daos__fs__sys_8h_1a55700f92fe0af5458af843e0e5f828e2"/>    <section>
    <title>dfs_sys2base()</title>
<indexterm><primary>dfs_sys2base</primary><secondary>daos_fs_sys.h</secondary></indexterm>
<indexterm><primary>daos_fs_sys.h</primary><secondary>dfs_sys2base</secondary></indexterm>
<para><computeroutput>int dfs_sys2base (<link linkend="_daos__fs__sys_8h_1a7936717f4065ba9dc267776eac7ced2e">dfs_sys_t</link> * dfs_sys, <link linkend="_group___filesystem_1gafc65ec05277f052daed166445bf3c828">dfs_t</link> ** dfs)</computeroutput></para>
<para>Get the underlying dfs_t from the dfs_sys_t. This should not be closed with <link linkend="_group___filesystem_1gadae8b520eca7d1a4f020c5505d1acc79">dfs_umount()</link>.</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>dfs_sys</entry>
                                <entry>
<para>Pointer to the mounted file system. </para>
</entry>
                            </row>
                            <row>
                                <entry>out                                </entry>                                <entry>dfs</entry>
                                <entry>
<para>Pointer to the underlying dfs_t.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>0 on success, errno code on failure. </para>
</formalpara>
</para>
    </section><anchor xml:id="_daos__fs__sys_8h_1a821528212d0ade018e43ce68c93ff425"/>    <section>
    <title>dfs_sys_access()</title>
<indexterm><primary>dfs_sys_access</primary><secondary>daos_fs_sys.h</secondary></indexterm>
<indexterm><primary>daos_fs_sys.h</primary><secondary>dfs_sys_access</secondary></indexterm>
<para><computeroutput>int dfs_sys_access (<link linkend="_daos__fs__sys_8h_1a7936717f4065ba9dc267776eac7ced2e">dfs_sys_t</link> * dfs_sys, const char * path, int mask, int flags)</computeroutput></para>
<para>Check access permissions on a path. Similar to Linux access(2). By default, symlinks are dereferenced.</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>dfs_sys</entry>
                                <entry>
<para>Pointer to the mounted file system. </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>path</entry>
                                <entry>
<para>Link path of object. </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>mask</entry>
                                <entry>
<para>accessibility check(s) to be performed. It should be either the value F_OK, or a mask with bitwise OR of one or more of R_OK, W_OK, and X_OK. </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>flags</entry>
                                <entry>
<para>Access flags (O_NOFOLLOW).</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>0 on success, errno code on failure. </para>
</formalpara>
</para>
    </section><anchor xml:id="_daos__fs__sys_8h_1a3d77734aaa37862e4a7aa6eba99bdedf"/>    <section>
    <title>dfs_sys_chmod()</title>
<indexterm><primary>dfs_sys_chmod</primary><secondary>daos_fs_sys.h</secondary></indexterm>
<indexterm><primary>daos_fs_sys.h</primary><secondary>dfs_sys_chmod</secondary></indexterm>
<para><computeroutput>int dfs_sys_chmod (<link linkend="_daos__fs__sys_8h_1a7936717f4065ba9dc267776eac7ced2e">dfs_sys_t</link> * dfs_sys, const char * path, mode_t mode)</computeroutput></para>
<para>Change permission access bits. Symlinks are dereferenced.</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>dfs_sys</entry>
                                <entry>
<para>Pointer to the mounted file system. </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>path</entry>
                                <entry>
<para>Link path of object. </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>mode</entry>
                                <entry>
<para>New permission access modes. For now, we don&apos;t support the sticky bit, setuid, and setgid.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>0 on success, errno code on failure. </para>
</formalpara>
</para>
    </section><anchor xml:id="_daos__fs__sys_8h_1a4a0f7bcac0468d647920af6a7d737bbc"/>    <section>
    <title>dfs_sys_close()</title>
<indexterm><primary>dfs_sys_close</primary><secondary>daos_fs_sys.h</secondary></indexterm>
<indexterm><primary>daos_fs_sys.h</primary><secondary>dfs_sys_close</secondary></indexterm>
<para><computeroutput>int dfs_sys_close (<link linkend="_group___filesystem_1ga51617a5017d3365ee5faf1452daed4b2">dfs_obj_t</link> * obj)</computeroutput></para>
<para>Close/release open object.</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>obj</entry>
                                <entry>
<para>Object to release.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>0 on success, errno code on failure. </para>
</formalpara>
</para>
    </section><anchor xml:id="_daos__fs__sys_8h_1a96af25c135edcea67877c748e8529b95"/>    <section>
    <title>dfs_sys_closedir()</title>
<indexterm><primary>dfs_sys_closedir</primary><secondary>daos_fs_sys.h</secondary></indexterm>
<indexterm><primary>daos_fs_sys.h</primary><secondary>dfs_sys_closedir</secondary></indexterm>
<para><computeroutput>int dfs_sys_closedir (DIR * dirp)</computeroutput></para>
<para>Close a directory opened with <link linkend="_daos__fs__sys_8h_1a596764235e708b078539d39893e39853">dfs_sys_opendir()</link>.</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>dirp</entry>
                                <entry>
<para>Pointer to the open directory.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>0 on success, errno code on failure. </para>
</formalpara>
</para>
    </section><anchor xml:id="_daos__fs__sys_8h_1a235bc71c01ad4acdd7434018f36cc63f"/>    <section>
    <title>dfs_sys_getxattr()</title>
<indexterm><primary>dfs_sys_getxattr</primary><secondary>daos_fs_sys.h</secondary></indexterm>
<indexterm><primary>daos_fs_sys.h</primary><secondary>dfs_sys_getxattr</secondary></indexterm>
<para><computeroutput>int dfs_sys_getxattr (<link linkend="_daos__fs__sys_8h_1a7936717f4065ba9dc267776eac7ced2e">dfs_sys_t</link> * dfs_sys, const char * path, const char * name, void * value, <link linkend="_group___types_1gaef45c835fcfbd5f969030fd7c854eb8a">daos_size_t</link> * size, int flags)</computeroutput></para>
<para>Get extended attribute of a path. By default, if path is a symlink, the link itself is interrogated.</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>dfs_sys</entry>
                                <entry>
<para>Pointer to the mounted file system. </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>path</entry>
                                <entry>
<para>Link path of object. </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>name</entry>
                                <entry>
<para>Name of xattr to get. </para>
</entry>
                            </row>
                            <row>
                                <entry>out                                </entry>                                <entry>value</entry>
                                <entry>
<para>Buffer to place value of xattr. </para>
</entry>
                            </row>
                            <row>
                                <entry>in,out                                </entry>                                <entry>size</entry>
                                <entry>
<para>[in]: Size of buffer value. [out]: Actual size of xattr. </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>flags</entry>
                                <entry>
<para>(O_NOFOLLOW)</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>0 on success, errno code on failure. ERANGE If size is too small. </para>
</formalpara>
</para>
    </section><anchor xml:id="_daos__fs__sys_8h_1a70c1910e7375c989758d7c62fb3c6636"/>    <section>
    <title>dfs_sys_global2local()</title>
<indexterm><primary>dfs_sys_global2local</primary><secondary>daos_fs_sys.h</secondary></indexterm>
<indexterm><primary>daos_fs_sys.h</primary><secondary>dfs_sys_global2local</secondary></indexterm>
<para><computeroutput>int dfs_sys_global2local (<link linkend="_structdaos__handle__t">daos_handle_t</link> poh, <link linkend="_structdaos__handle__t">daos_handle_t</link> coh, int mflags, int sflags, d_iov_t glob, <link linkend="_daos__fs__sys_8h_1a7936717f4065ba9dc267776eac7ced2e">dfs_sys_t</link> ** dfs_sys)</computeroutput></para>
<para>Create a dfs_sys mount from global representation data. This has to be closed with <link linkend="_daos__fs__sys_8h_1a8b61b29527f80c1dac4cbd99da19b68b">dfs_sys_umount()</link>.</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>poh</entry>
                                <entry>
<para>Pool connection handle. </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>coh</entry>
                                <entry>
<para>Container open handle. </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>mflags</entry>
                                <entry>
<para>Mount flags (O_RDONLY or O_RDWR). If 0, inherit flags of serialized DFS Sys handle. </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>sflags</entry>
                                <entry>
<para>Sys flags (DFS_SYS_NO_CACHE or DFS_SYS_NO_LOCK). This is not inherited from the DFS Sys handle. </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>glob</entry>
                                <entry>
<para>Global (shared) representation of a collective handle to be extracted. </para>
</entry>
                            </row>
                            <row>
                                <entry>out                                </entry>                                <entry>dfs_sys</entry>
                                <entry>
<para>Returned dfs_sys mount. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
    </section><anchor xml:id="_daos__fs__sys_8h_1ae66a3eb29fe2aec32a8e2321b9f5c305"/>    <section>
    <title>dfs_sys_listxattr()</title>
<indexterm><primary>dfs_sys_listxattr</primary><secondary>daos_fs_sys.h</secondary></indexterm>
<indexterm><primary>daos_fs_sys.h</primary><secondary>dfs_sys_listxattr</secondary></indexterm>
<para><computeroutput>int dfs_sys_listxattr (<link linkend="_daos__fs__sys_8h_1a7936717f4065ba9dc267776eac7ced2e">dfs_sys_t</link> * dfs_sys, const char * path, char * list, <link linkend="_group___types_1gaef45c835fcfbd5f969030fd7c854eb8a">daos_size_t</link> * size, int flags)</computeroutput></para>
<para>list extended attributes of a path and place them all in a buffer NULL terminated one after the other. By default, if path is a symlink, the link itself is interrogated.</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>dfs_sys</entry>
                                <entry>
<para>Pointer to the mounted file system. </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>path</entry>
                                <entry>
<para>Link path of object. </para>
</entry>
                            </row>
                            <row>
                                <entry>in,out                                </entry>                                <entry>list</entry>
                                <entry>
<para>[in]: Allocated buffer for all xattr names. [out]: Names placed after each other (null terminated). </para>
</entry>
                            </row>
                            <row>
                                <entry>in,out                                </entry>                                <entry>size</entry>
                                <entry>
<para>[in]: Size of list. [out]: Actual size of list. </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>flags</entry>
                                <entry>
<para>(O_NOFOLLOW)</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>0 on success, errno code on failure. ERANGE If size is too small. </para>
</formalpara>
</para>
    </section><anchor xml:id="_daos__fs__sys_8h_1acd0941409a44ecc831baceaa64da04ae"/>    <section>
    <title>dfs_sys_local2global()</title>
<indexterm><primary>dfs_sys_local2global</primary><secondary>daos_fs_sys.h</secondary></indexterm>
<indexterm><primary>daos_fs_sys.h</primary><secondary>dfs_sys_local2global</secondary></indexterm>
<para><computeroutput>int dfs_sys_local2global (<link linkend="_daos__fs__sys_8h_1a7936717f4065ba9dc267776eac7ced2e">dfs_sys_t</link> * dfs_sys, d_iov_t * glob)</computeroutput></para>
<para>Convert a local dfs_sys mount to global representation data which can be shared with peer processes. If glob-&gt;iov_buf is set to NULL, the actual size of the global handle is returned through glob-&gt;iov_buf_len. This function does not involve any communication and does not block.</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>dfs_sys</entry>
                                <entry>
<para>valid dfs_sys mount to be shared. </para>
</entry>
                            </row>
                            <row>
                                <entry>out                                </entry>                                <entry>glob</entry>
                                <entry>
<para>pointer to iov of the buffer to store mount information.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>0 on success, errno code on failure. </para>
</formalpara>
</para>
    </section><anchor xml:id="_daos__fs__sys_8h_1a407bac4d155b04591490d6a67f743baf"/>    <section>
    <title>dfs_sys_mkdir()</title>
<indexterm><primary>dfs_sys_mkdir</primary><secondary>daos_fs_sys.h</secondary></indexterm>
<indexterm><primary>daos_fs_sys.h</primary><secondary>dfs_sys_mkdir</secondary></indexterm>
<para><computeroutput>int dfs_sys_mkdir (<link linkend="_daos__fs__sys_8h_1a7936717f4065ba9dc267776eac7ced2e">dfs_sys_t</link> * dfs_sys, const char * dir, mode_t mode, <link linkend="_group___obj_class_1ga697f542a81cf2b46e3642a31ad289728">daos_oclass_id_t</link> cid)</computeroutput></para>
<para>Create a directory.</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>dfs_sys</entry>
                                <entry>
<para>Pointer to the mounted file system. </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>dir</entry>
                                <entry>
<para>Link path of new dir. </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>mode</entry>
                                <entry>
<para>mkdir mode. </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>cid</entry>
                                <entry>
<para>DAOS object class id (pass 0 for default MAX_RW).</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>0 on success, errno code on failure. </para>
</formalpara>
</para>
    </section><anchor xml:id="_daos__fs__sys_8h_1a4b7e92840dbed47865c7d6353a59943a"/>    <section>
    <title>dfs_sys_mknod()</title>
<indexterm><primary>dfs_sys_mknod</primary><secondary>daos_fs_sys.h</secondary></indexterm>
<indexterm><primary>daos_fs_sys.h</primary><secondary>dfs_sys_mknod</secondary></indexterm>
<para><computeroutput>int dfs_sys_mknod (<link linkend="_daos__fs__sys_8h_1a7936717f4065ba9dc267776eac7ced2e">dfs_sys_t</link> * dfs_sys, const char * path, mode_t mode, <link linkend="_group___obj_class_1ga697f542a81cf2b46e3642a31ad289728">daos_oclass_id_t</link> cid, <link linkend="_group___types_1gaef45c835fcfbd5f969030fd7c854eb8a">daos_size_t</link> chunk_size)</computeroutput></para>
<para>Create a file or directory.</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>dfs_sys</entry>
                                <entry>
<para>Pointer to the mounted file system. </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>path</entry>
                                <entry>
<para>Link path of new object. </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>mode</entry>
                                <entry>
<para>mode_t (permissions + type). </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>cid</entry>
                                <entry>
<para>DAOS object class id (pass 0 for default MAX_RW). Valid on create only; ignored otherwise. </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>chunk_size</entry>
                                <entry>
<para>Chunk size of the array object to be created. (pass 0 for default 1 MiB chunk size). Valid on file create only; ignored otherwise.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>0 on success, errno code on failure. EEXIST If path already exists. </para>
</formalpara>
</para>
    </section><anchor xml:id="_daos__fs__sys_8h_1aa4310faf0b81eb691dfe58803a6e59f3"/>    <section>
    <title>dfs_sys_mount()</title>
<indexterm><primary>dfs_sys_mount</primary><secondary>daos_fs_sys.h</secondary></indexterm>
<indexterm><primary>daos_fs_sys.h</primary><secondary>dfs_sys_mount</secondary></indexterm>
<para><computeroutput>int dfs_sys_mount (<link linkend="_structdaos__handle__t">daos_handle_t</link> poh, <link linkend="_structdaos__handle__t">daos_handle_t</link> coh, int mflags, int sflags, <link linkend="_daos__fs__sys_8h_1a7936717f4065ba9dc267776eac7ced2e">dfs_sys_t</link> ** dfs_sys)</computeroutput></para>
<para>Mount a file system with dfs_mount and optionally initialize a cache.</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>poh</entry>
                                <entry>
<para>Pool connection handle. </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>coh</entry>
                                <entry>
<para>Container open handle. </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>mflags</entry>
                                <entry>
<para>Mount flags (O_RDONLY or O_RDWR). </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>sflags</entry>
                                <entry>
<para>Sys flags (DFS_SYS_NO_CACHE or DFS_SYS_NO_LOCK) </para>
</entry>
                            </row>
                            <row>
                                <entry>out                                </entry>                                <entry>dfs_sys</entry>
                                <entry>
<para>Pointer to the file system object created.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>0 on success, errno code on failure. </para>
</formalpara>
</para>
    </section><anchor xml:id="_daos__fs__sys_8h_1a36e34a03096ab25e088aed43be4abafb"/>    <section>
    <title>dfs_sys_open()</title>
<indexterm><primary>dfs_sys_open</primary><secondary>daos_fs_sys.h</secondary></indexterm>
<indexterm><primary>daos_fs_sys.h</primary><secondary>dfs_sys_open</secondary></indexterm>
<para><computeroutput>int dfs_sys_open (<link linkend="_daos__fs__sys_8h_1a7936717f4065ba9dc267776eac7ced2e">dfs_sys_t</link> * dfs_sys, const char * path, mode_t mode, int flags, <link linkend="_group___obj_class_1ga697f542a81cf2b46e3642a31ad289728">daos_oclass_id_t</link> cid, <link linkend="_group___types_1gaef45c835fcfbd5f969030fd7c854eb8a">daos_size_t</link> chunk_size, const char * value, <link linkend="_group___filesystem_1ga51617a5017d3365ee5faf1452daed4b2">dfs_obj_t</link> ** obj)</computeroutput></para>
<para>Create/Open a directory, file, or Symlink. The object must be released with <link linkend="_daos__fs__sys_8h_1a4a0f7bcac0468d647920af6a7d737bbc">dfs_sys_close()</link>.</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>dfs_sys</entry>
                                <entry>
<para>Pointer to the mounted file system. </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>path</entry>
                                <entry>
<para>Link path of the object to create/open. </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>mode</entry>
                                <entry>
<para>mode_t (permissions + type). </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>flags</entry>
                                <entry>
<para>Access flags (handles: O_RDONLY, O_RDWR, O_EXCL, O_CREAT, O_TRUNC, O_NOFOLLOW). </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>cid</entry>
                                <entry>
<para>DAOS object class id (pass 0 for default MAX_RW). Valid on create only; ignored otherwise. </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>chunk_size</entry>
                                <entry>
<para>Chunk size of the array object to be created. (pass 0 for default 1 MiB chunk size). Valid on file create only; ignored otherwise. </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>value</entry>
                                <entry>
<para>Symlink value (NULL if not syml). </para>
</entry>
                            </row>
                            <row>
                                <entry>out                                </entry>                                <entry>obj</entry>
                                <entry>
<para>Pointer to object opened.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>0 on success, errno code on failure. </para>
</formalpara>
</para>
    </section><anchor xml:id="_daos__fs__sys_8h_1a596764235e708b078539d39893e39853"/>    <section>
    <title>dfs_sys_opendir()</title>
<indexterm><primary>dfs_sys_opendir</primary><secondary>daos_fs_sys.h</secondary></indexterm>
<indexterm><primary>daos_fs_sys.h</primary><secondary>dfs_sys_opendir</secondary></indexterm>
<para><computeroutput>int dfs_sys_opendir (<link linkend="_daos__fs__sys_8h_1a7936717f4065ba9dc267776eac7ced2e">dfs_sys_t</link> * dfs_sys, const char * dir, int flags, DIR ** dirp)</computeroutput></para>
<para>Open a directory. The directory must be closed with <link linkend="_daos__fs__sys_8h_1a96af25c135edcea67877c748e8529b95">dfs_sys_closedir()</link>.</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>dfs_sys</entry>
                                <entry>
<para>Pointer to the mounted file system. </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>dir</entry>
                                <entry>
<para>Link path of dir. </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>flags</entry>
                                <entry>
<para>(O_NOFOLLOW) </para>
</entry>
                            </row>
                            <row>
                                <entry>out                                </entry>                                <entry>dirp</entry>
                                <entry>
<para>Pointer to the open directory.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>0 on success, errno code on failure. </para>
</formalpara>
</para>
    </section><anchor xml:id="_daos__fs__sys_8h_1a18b52b035cb2f0275f5d1921545480f3"/>    <section>
    <title>dfs_sys_punch()</title>
<indexterm><primary>dfs_sys_punch</primary><secondary>daos_fs_sys.h</secondary></indexterm>
<indexterm><primary>daos_fs_sys.h</primary><secondary>dfs_sys_punch</secondary></indexterm>
<para><computeroutput>int dfs_sys_punch (<link linkend="_daos__fs__sys_8h_1a7936717f4065ba9dc267776eac7ced2e">dfs_sys_t</link> * dfs_sys, const char * path, daos_off_t offset, daos_off_t len)</computeroutput></para>
<para>Punch a hole in the file starting at offset to len. If len is set to DFS_MAX_FSIZE, this will be a truncate operation to punch all bytes in the file above offset. If the file size is smaller than offset, the file is extended to offset and len is ignored.</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>dfs_sys</entry>
                                <entry>
<para>Pointer to the mounted file system. </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>path</entry>
                                <entry>
<para>Link path of file. </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>offset</entry>
                                <entry>
<para>offset of file to punch at. </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>len</entry>
                                <entry>
<para>number of bytes to punch.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>0 on success, errno code on failure. </para>
</formalpara>
</para>
    </section><anchor xml:id="_daos__fs__sys_8h_1a0f63c60fbaa68948b6e547539a70ec4c"/>    <section>
    <title>dfs_sys_read()</title>
<indexterm><primary>dfs_sys_read</primary><secondary>daos_fs_sys.h</secondary></indexterm>
<indexterm><primary>daos_fs_sys.h</primary><secondary>dfs_sys_read</secondary></indexterm>
<para><computeroutput>int dfs_sys_read (<link linkend="_daos__fs__sys_8h_1a7936717f4065ba9dc267776eac7ced2e">dfs_sys_t</link> * dfs_sys, <link linkend="_group___filesystem_1ga51617a5017d3365ee5faf1452daed4b2">dfs_obj_t</link> * obj, void * buf, daos_off_t off, <link linkend="_group___types_1gaef45c835fcfbd5f969030fd7c854eb8a">daos_size_t</link> * size, <link linkend="_group___types_1ga7e4095443fd42c3411ed0bd000cc9c20">daos_event_t</link> * ev)</computeroutput></para>
<para>Read data from the file object, and return actual data read.</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>dfs_sys</entry>
                                <entry>
<para>Pointer to the mounted file system. </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>obj</entry>
                                <entry>
<para>Opened file object. </para>
</entry>
                            </row>
                            <row>
                                <entry>in,out                                </entry>                                <entry>buf</entry>
                                <entry>
<para>[in]: Allocated buffer for data. [out]: Actual data read. </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>off</entry>
                                <entry>
<para>Offset into the file to read from. </para>
</entry>
                            </row>
                            <row>
                                <entry>in,out                                </entry>                                <entry>size</entry>
                                <entry>
<para>[in]: Size of buffer passed in. [out]: Actual size of data read. </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>ev</entry>
                                <entry>
<para>Completion event, it is optional and can be NULL. Function will run in blocking mode if <emphasis>ev</emphasis> is NULL.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>0 on success, errno code on failure. </para>
</formalpara>
</para>
    </section><anchor xml:id="_daos__fs__sys_8h_1a0725233d7d2ab701f83231968b26d63c"/>    <section>
    <title>dfs_sys_readdir()</title>
<indexterm><primary>dfs_sys_readdir</primary><secondary>daos_fs_sys.h</secondary></indexterm>
<indexterm><primary>daos_fs_sys.h</primary><secondary>dfs_sys_readdir</secondary></indexterm>
<para><computeroutput>int dfs_sys_readdir (<link linkend="_daos__fs__sys_8h_1a7936717f4065ba9dc267776eac7ced2e">dfs_sys_t</link> * dfs_sys, DIR * dirp, struct dirent ** dirent)</computeroutput></para>
<para>Return the next directory entry in a directory opened by <link linkend="_daos__fs__sys_8h_1a0725233d7d2ab701f83231968b26d63c">dfs_sys_readdir()</link>, or NULL if there are no more entries.</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>dfs_sys</entry>
                                <entry>
<para>Pointer to the mounted file system. </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>dirp</entry>
                                <entry>
<para>Pointer to open directory. </para>
</entry>
                            </row>
                            <row>
                                <entry>out                                </entry>                                <entry>dirent</entry>
                                <entry>
<para>Pointer to the next directory entry. This is NULL if there are no more directory entries.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>0 on success, errno code on failure. </para>
</formalpara>
</para>
    </section><anchor xml:id="_daos__fs__sys_8h_1a4bc1c2c98f3b0b3925c91271077467f2"/>    <section>
    <title>dfs_sys_readlink()</title>
<indexterm><primary>dfs_sys_readlink</primary><secondary>daos_fs_sys.h</secondary></indexterm>
<indexterm><primary>daos_fs_sys.h</primary><secondary>dfs_sys_readlink</secondary></indexterm>
<para><computeroutput>int dfs_sys_readlink (<link linkend="_daos__fs__sys_8h_1a7936717f4065ba9dc267776eac7ced2e">dfs_sys_t</link> * dfs_sys, const char * path, char * buf, <link linkend="_group___types_1gaef45c835fcfbd5f969030fd7c854eb8a">daos_size_t</link> * size)</computeroutput></para>
<para>Retrieve Symlink value of path if it&apos;s a symlink. If the buffer size passed in is not large enough, we copy up to size of the buffer, and update the size to actual value size. The size returned includes the null terminator.</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>dfs_sys</entry>
                                <entry>
<para>Pointer to the mounted file system. </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>path</entry>
                                <entry>
<para>Link path of object. </para>
</entry>
                            </row>
                            <row>
                                <entry>in,out                                </entry>                                <entry>buf</entry>
                                <entry>
<para>[in]: Allocated buffer for value. [out]: Symlink value. </para>
</entry>
                            </row>
                            <row>
                                <entry>in,out                                </entry>                                <entry>size</entry>
                                <entry>
<para>[in]: Size of buffer passed in. [out]: Actual size of value.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>0 on success, errno code on failure. </para>
</formalpara>
</para>
    </section><anchor xml:id="_daos__fs__sys_8h_1ad28b5347d4a4a226335580baec031ae9"/>    <section>
    <title>dfs_sys_remove()</title>
<indexterm><primary>dfs_sys_remove</primary><secondary>daos_fs_sys.h</secondary></indexterm>
<indexterm><primary>daos_fs_sys.h</primary><secondary>dfs_sys_remove</secondary></indexterm>
<para><computeroutput>int dfs_sys_remove (<link linkend="_daos__fs__sys_8h_1a7936717f4065ba9dc267776eac7ced2e">dfs_sys_t</link> * dfs_sys, const char * path, bool force, <link linkend="_structdaos__obj__id__t">daos_obj_id_t</link> * oid)</computeroutput></para>
<para>Remove an object identified by path. If object is a directory and is non-empty; this will fail unless force option is true. If object is a symlink, the symlink is removed. See <link linkend="_group___filesystem_1ga1e049abc4666778f326b604c6f4b3c36">dfs_remove()</link> for details.</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>dfs_sys</entry>
                                <entry>
<para>Pointer to the mounted file system. </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>path</entry>
                                <entry>
<para>Link path of object. </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>force</entry>
                                <entry>
<para>If true, remove dir even if non-empty. </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>oid</entry>
                                <entry>
<para>Optionally return the DAOS Object ID of the removed obj.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>0 on success, errno code on failure. </para>
</formalpara>
</para>
    </section><anchor xml:id="_daos__fs__sys_8h_1a3e9ddefd2aebf07acbbcdb5d12073380"/>    <section>
    <title>dfs_sys_remove_type()</title>
<indexterm><primary>dfs_sys_remove_type</primary><secondary>daos_fs_sys.h</secondary></indexterm>
<indexterm><primary>daos_fs_sys.h</primary><secondary>dfs_sys_remove_type</secondary></indexterm>
<para><computeroutput>int dfs_sys_remove_type (<link linkend="_daos__fs__sys_8h_1a7936717f4065ba9dc267776eac7ced2e">dfs_sys_t</link> * dfs_sys, const char * path, bool force, mode_t mode, <link linkend="_structdaos__obj__id__t">daos_obj_id_t</link> * oid)</computeroutput></para>
<para>Similar to dfs_sys_remove but optionally enforces a type check on the entry.</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>dfs_sys</entry>
                                <entry>
<para>Pointer to the mounted file system. </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>path</entry>
                                <entry>
<para>Link path of object. </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>force</entry>
                                <entry>
<para>If true, remove dir even if non-empty. </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>mode</entry>
                                <entry>
<para>mode_t (S_IFREG | S_IFDIR | S_IFLNK). Pass 0 skip the type check. </para>
</entry>
                            </row>
                            <row>
                                <entry>out                                </entry>                                <entry>oid</entry>
                                <entry>
<para>Optionally return the DAOS Object ID of the removed obj.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>0 on success, errno code on failure. </para>
</formalpara>
</para>
    </section><anchor xml:id="_daos__fs__sys_8h_1aa945c6fcd1203d38881b4ed48af8d15d"/>    <section>
    <title>dfs_sys_removexattr()</title>
<indexterm><primary>dfs_sys_removexattr</primary><secondary>daos_fs_sys.h</secondary></indexterm>
<indexterm><primary>daos_fs_sys.h</primary><secondary>dfs_sys_removexattr</secondary></indexterm>
<para><computeroutput>int dfs_sys_removexattr (<link linkend="_daos__fs__sys_8h_1a7936717f4065ba9dc267776eac7ced2e">dfs_sys_t</link> * dfs_sys, const char * path, const char * name, int flags)</computeroutput></para>
<para>Remove extended attribute of a path. By default, if path is a symlink, the link itself is interogated.</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>dfs_sys</entry>
                                <entry>
<para>Pointer to the mounted file system. </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>path</entry>
                                <entry>
<para>Link path of object. </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>name</entry>
                                <entry>
<para>Name of xattr to remove. </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>flags</entry>
                                <entry>
<para>(O_NOFOLLOW)</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>0 on success, errno code on failure. </para>
</formalpara>
</para>
    </section><anchor xml:id="_daos__fs__sys_8h_1adc7fe0314eae59805607c7cf7c196dc9"/>    <section>
    <title>dfs_sys_setattr()</title>
<indexterm><primary>dfs_sys_setattr</primary><secondary>daos_fs_sys.h</secondary></indexterm>
<indexterm><primary>daos_fs_sys.h</primary><secondary>dfs_sys_setattr</secondary></indexterm>
<para><computeroutput>int dfs_sys_setattr (<link linkend="_daos__fs__sys_8h_1a7936717f4065ba9dc267776eac7ced2e">dfs_sys_t</link> * dfs_sys, const char * path, struct stat * stbuf, int flags, int sflags)</computeroutput></para>
<para>set stat attributes for a file and fetch new values. By default, if the object is a symlink the link itself is modified. See <link linkend="_daos__fs__sys_8h_1a06d9c1cd0015cccc4aec3a6c94874562">dfs_sys_stat()</link> for which entries are filled.</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>dfs_sys</entry>
                                <entry>
<para>Pointer to the mounted file system. </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>path</entry>
                                <entry>
<para>Link path of object. </para>
</entry>
                            </row>
                            <row>
                                <entry>in,out                                </entry>                                <entry>stbuf</entry>
                                <entry>
<para>[in]: Stat struct with the members set. [out]: Stat struct with all valid members filled. </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>flags</entry>
                                <entry>
<para>Bitmask of flags to set. </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>sflags</entry>
                                <entry>
<para>(O_NOFOLLOW)</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>0 on Success. errno code on Failure. </para>
</formalpara>
</para>
    </section><anchor xml:id="_daos__fs__sys_8h_1abbbcbdf9413593c201447ec664ef9ee5"/>    <section>
    <title>dfs_sys_setxattr()</title>
<indexterm><primary>dfs_sys_setxattr</primary><secondary>daos_fs_sys.h</secondary></indexterm>
<indexterm><primary>daos_fs_sys.h</primary><secondary>dfs_sys_setxattr</secondary></indexterm>
<para><computeroutput>int dfs_sys_setxattr (<link linkend="_daos__fs__sys_8h_1a7936717f4065ba9dc267776eac7ced2e">dfs_sys_t</link> * dfs_sys, const char * path, const char * name, const void * value, <link linkend="_group___types_1gaef45c835fcfbd5f969030fd7c854eb8a">daos_size_t</link> size, int flags, int sflags)</computeroutput></para>
<para>Set extended attribute on a path (file, dir, syml). By default, if path is a symlink, the value is set on the symlink itself.</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>dfs_sys</entry>
                                <entry>
<para>Pointer to the mounted file system. </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>path</entry>
                                <entry>
<para>Link path of object. </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>name</entry>
                                <entry>
<para>Name of xattr to add. </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>value</entry>
                                <entry>
<para>Value of xattr. </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>size</entry>
                                <entry>
<para>Size in bytes of the value. </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>flags</entry>
                                <entry>
<para>Set flags. passing 0 does not check for xattr existence. XATTR_CREATE: create or fail if xattr exists. XATTR_REPLACE: replace or fail if xattr does not exist. </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>sflags</entry>
                                <entry>
<para>(O_NOFOLLOW)</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>0 on success, errno code on failure. </para>
</formalpara>
</para>
    </section><anchor xml:id="_daos__fs__sys_8h_1a06d9c1cd0015cccc4aec3a6c94874562"/>    <section>
    <title>dfs_sys_stat()</title>
<indexterm><primary>dfs_sys_stat</primary><secondary>daos_fs_sys.h</secondary></indexterm>
<indexterm><primary>daos_fs_sys.h</primary><secondary>dfs_sys_stat</secondary></indexterm>
<para><computeroutput>int dfs_sys_stat (<link linkend="_daos__fs__sys_8h_1a7936717f4065ba9dc267776eac7ced2e">dfs_sys_t</link> * dfs_sys, const char * path, int flags, struct stat * stbuf)</computeroutput></para>
<para>stat attributes of an entry. By default, if object is a symlink, the link itself is interrogated. The following elements of the stat struct are populated (the rest are set to 0): mode_t st_mode; uid_t st_uid; gid_t st_gid; off_t st_size; blkcnt_t st_blocks; struct timespec st_atim; struct timespec st_mtim; struct timespec st_ctim;</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>dfs_sys</entry>
                                <entry>
<para>Pointer to the mounted file system. </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>path</entry>
                                <entry>
<para>Link path of object. </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>flags</entry>
                                <entry>
<para>Stat flags (O_NOFOLLOW). </para>
</entry>
                            </row>
                            <row>
                                <entry>out                                </entry>                                <entry>stbuf</entry>
                                <entry>
<para>Stat struct with the members above filled.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>0 on success, errno code on failure. </para>
</formalpara>
</para>
    </section><anchor xml:id="_daos__fs__sys_8h_1a94676aa5564f92f615f8a8c44a32453f"/>    <section>
    <title>dfs_sys_symlink()</title>
<indexterm><primary>dfs_sys_symlink</primary><secondary>daos_fs_sys.h</secondary></indexterm>
<indexterm><primary>daos_fs_sys.h</primary><secondary>dfs_sys_symlink</secondary></indexterm>
<para><computeroutput>int dfs_sys_symlink (<link linkend="_daos__fs__sys_8h_1a7936717f4065ba9dc267776eac7ced2e">dfs_sys_t</link> * dfs_sys, const char * target, const char * path)</computeroutput></para>
<para>Create a symlink.</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>dfs_sys</entry>
                                <entry>
<para>Pointer to the mounted file system. </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>target</entry>
                                <entry>
<para>Symlink value. </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>path</entry>
                                <entry>
<para>Path to the new symlink.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>0 on success, errno code on failure. </para>
</formalpara>
</para>
    </section><anchor xml:id="_daos__fs__sys_8h_1a8b61b29527f80c1dac4cbd99da19b68b"/>    <section>
    <title>dfs_sys_umount()</title>
<indexterm><primary>dfs_sys_umount</primary><secondary>daos_fs_sys.h</secondary></indexterm>
<indexterm><primary>daos_fs_sys.h</primary><secondary>dfs_sys_umount</secondary></indexterm>
<para><computeroutput>int dfs_sys_umount (<link linkend="_daos__fs__sys_8h_1a7936717f4065ba9dc267776eac7ced2e">dfs_sys_t</link> * dfs_sys)</computeroutput></para>
<para>Unmount a file system with dfs_mount.</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>dfs_sys</entry>
                                <entry>
<para>Pointer to the mounted file system.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>0 on success, errno code on failure. </para>
</formalpara>
</para>
    </section><anchor xml:id="_daos__fs__sys_8h_1ace808c585382babaa2f3984f9604aa6c"/>    <section>
    <title>dfs_sys_utimens()</title>
<indexterm><primary>dfs_sys_utimens</primary><secondary>daos_fs_sys.h</secondary></indexterm>
<indexterm><primary>daos_fs_sys.h</primary><secondary>dfs_sys_utimens</secondary></indexterm>
<para><computeroutput>int dfs_sys_utimens (<link linkend="_daos__fs__sys_8h_1a7936717f4065ba9dc267776eac7ced2e">dfs_sys_t</link> * dfs_sys, const char * path, const struct timespec times[2], int flags)</computeroutput></para>
<para>Set atime and mtime of a path. This currently does not set nanosecond precision.</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>dfs_sys</entry>
                                <entry>
<para>Pointer to the mounted file system. </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>path</entry>
                                <entry>
<para>Link path of object. </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>times</entry>
                                <entry>
<para>[0]: atime to set [1]: mtime to set </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>flags</entry>
                                <entry>
<para>(O_NOFOLLOW)</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>0 on success, errno code on failure. </para>
</formalpara>
</para>
    </section><anchor xml:id="_daos__fs__sys_8h_1a21b1fc9f0d51e54c566f62be95097c84"/>    <section>
    <title>dfs_sys_write()</title>
<indexterm><primary>dfs_sys_write</primary><secondary>daos_fs_sys.h</secondary></indexterm>
<indexterm><primary>daos_fs_sys.h</primary><secondary>dfs_sys_write</secondary></indexterm>
<para><computeroutput>int dfs_sys_write (<link linkend="_daos__fs__sys_8h_1a7936717f4065ba9dc267776eac7ced2e">dfs_sys_t</link> * dfs_sys, <link linkend="_group___filesystem_1ga51617a5017d3365ee5faf1452daed4b2">dfs_obj_t</link> * obj, const void * buf, daos_off_t off, <link linkend="_group___types_1gaef45c835fcfbd5f969030fd7c854eb8a">daos_size_t</link> * size, <link linkend="_group___types_1ga7e4095443fd42c3411ed0bd000cc9c20">daos_event_t</link> * ev)</computeroutput></para>
<para>Write data to the file object.</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>dfs_sys</entry>
                                <entry>
<para>Pointer to the mounted file system. </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>obj</entry>
                                <entry>
<para>Opened file object. </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>buf</entry>
                                <entry>
<para>Data to write. </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>off</entry>
                                <entry>
<para>Offset into the file to write to. </para>
</entry>
                            </row>
                            <row>
                                <entry>in,out                                </entry>                                <entry>size</entry>
                                <entry>
<para>[in]: Size of buffer passed in. [out]: Actual size of data written. </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>ev</entry>
                                <entry>
<para>Completion event, it is optional and can be NULL. Function will run in blocking mode if <emphasis>ev</emphasis> is NULL.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>0 on success, errno code on failure. </para>
</formalpara>
</para>
</section>
</section>
</section>
