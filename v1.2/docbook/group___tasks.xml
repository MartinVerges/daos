<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_group___tasks">
<title>DAOS Tasks</title>
<indexterm><primary>DAOS Tasks</primary></indexterm>
<simplesect>
    <title>Data Structures    </title>
        <itemizedlist>
            <listitem><para>struct <link linkend="_structdaos__set__params__t">daos_set_params_t</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdaos__pool__connect__t">daos_pool_connect_t</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdaos__pool__disconnect__t">daos_pool_disconnect_t</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdaos__pool__update__t">daos_pool_update_t</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdaos__pool__query__t">daos_pool_query_t</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdaos__pool__query__target__t">daos_pool_query_target_t</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdaos__pool__list__cont__t">daos_pool_list_cont_t</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdaos__pool__list__attr__t">daos_pool_list_attr_t</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdaos__pool__get__attr__t">daos_pool_get_attr_t</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdaos__pool__set__attr__t">daos_pool_set_attr_t</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdaos__pool__del__attr__t">daos_pool_del_attr_t</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdaos__pool__replicas__t">daos_pool_replicas_t</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdaos__mgmt__get__bs__state__t">daos_mgmt_get_bs_state_t</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdaos__pool__stop__svc__t">daos_pool_stop_svc_t</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdaos__cont__create__t">daos_cont_create_t</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdaos__cont__open__t">daos_cont_open_t</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdaos__cont__close__t">daos_cont_close_t</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdaos__cont__destroy__t">daos_cont_destroy_t</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdaos__cont__query__t">daos_cont_query_t</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdaos__cont__set__prop__t">daos_cont_set_prop_t</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdaos__cont__update__acl__t">daos_cont_update_acl_t</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdaos__cont__delete__acl__t">daos_cont_delete_acl_t</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdaos__cont__aggregate__t">daos_cont_aggregate_t</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdaos__cont__rollback__t">daos_cont_rollback_t</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdaos__cont__subscribe__t">daos_cont_subscribe_t</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdaos__cont__list__attr__t">daos_cont_list_attr_t</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdaos__cont__get__attr__t">daos_cont_get_attr_t</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdaos__cont__set__attr__t">daos_cont_set_attr_t</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdaos__cont__del__attr__t">daos_cont_del_attr_t</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdaos__cont__alloc__oids__t">daos_cont_alloc_oids_t</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdaos__cont__list__snap__t">daos_cont_list_snap_t</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdaos__cont__create__snap__t">daos_cont_create_snap_t</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdaos__cont__destroy__snap__t">daos_cont_destroy_snap_t</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdaos__tx__open__t">daos_tx_open_t</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdaos__tx__commit__t">daos_tx_commit_t</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdaos__tx__abort__t">daos_tx_abort_t</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdaos__tx__open__snap__t">daos_tx_open_snap_t</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdaos__tx__close__t">daos_tx_close_t</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdaos__tx__restart__t">daos_tx_restart_t</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdaos__obj__register__class__t">daos_obj_register_class_t</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdaos__obj__query__class__t">daos_obj_query_class_t</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdaos__obj__list__class__t">daos_obj_list_class_t</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdaos__obj__open__t">daos_obj_open_t</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdaos__obj__close__t">daos_obj_close_t</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdaos__obj__punch__t">daos_obj_punch_t</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdaos__obj__query__t">daos_obj_query_t</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdaos__obj__query__key__t">daos_obj_query_key_t</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdaos__obj__rw__t">daos_obj_rw_t</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdaos__obj__sync__args">daos_obj_sync_args</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdaos__obj__list__t">daos_obj_list_t</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdaos__array__create__t">daos_array_create_t</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdaos__array__open__t">daos_array_open_t</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdaos__array__close__t">daos_array_close_t</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdaos__array__io__t">daos_array_io_t</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdaos__array__get__size__t">daos_array_get_size_t</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdaos__array__set__size__t">daos_array_set_size_t</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdaos__array__destroy__t">daos_array_destroy_t</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdaos__kv__open__t">daos_kv_open_t</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdaos__kv__close__t">daos_kv_close_t</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdaos__kv__destroy__t">daos_kv_destroy_t</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdaos__kv__get__t">daos_kv_get_t</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdaos__kv__put__t">daos_kv_put_t</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdaos__kv__remove__t">daos_kv_remove_t</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structdaos__kv__list__t">daos_kv_list_t</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Typedefs    </title>
        <itemizedlist>
            <listitem><para>typedef <link linkend="_structdaos__obj__rw__t">daos_obj_rw_t</link> <link linkend="_group___tasks_1ga9f66df8006f1c09f1da9d1deddee89bf">daos_obj_fetch_t</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_structdaos__obj__rw__t">daos_obj_rw_t</link> <link linkend="_group___tasks_1gaa22debbfb9988e9be6a54bb4a86f6925">daos_obj_update_t</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_structdaos__obj__list__t">daos_obj_list_t</link> <link linkend="_group___tasks_1ga22f4eb5dd7ee7371ecec4137e8472ab9">daos_obj_list_dkey_t</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_structdaos__obj__list__t">daos_obj_list_t</link> <link linkend="_group___tasks_1ga5cf98970bc47d85da2169601c72ab869">daos_obj_list_akey_t</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_structdaos__obj__list__t">daos_obj_list_t</link> <link linkend="_group___tasks_1gaf14f0e9b9ad10d5b735c7de93502c49a">daos_obj_list_recx_t</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_structdaos__obj__list__t">daos_obj_list_t</link> <link linkend="_group___tasks_1ga321ac64cbc20db9f075a4f85d3588bd8">daos_obj_list_obj_t</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Enumerations    </title>
        <itemizedlist>
            <listitem><para>enum <link linkend="_group___tasks_1ga951c711321392d8d46a1447c17b89048">daos_opc_t</link> { 
<emphasis role="strong">DAOS_OPC_INVALID</emphasis> = -1, 
<link linkend="_group___tasks_1gga951c711321392d8d46a1447c17b89048ac8bbeee791f6511f481780ae7f4cc7b2">DAOS_OPC_SET_PARAMS</link> = 3, 
<emphasis role="strong">DAOS_OPC_MGMT_GET_BS_STATE</emphasis>, 
<link linkend="_group___tasks_1gga951c711321392d8d46a1447c17b89048a9e58564032c6cd145f1aec2591eddcde">DAOS_OPC_POOL_CONNECT</link> = 5, 

<emphasis role="strong">DAOS_OPC_POOL_DISCONNECT</emphasis>, 
<emphasis role="strong">DAOS_OPC_POOL_EXCLUDE</emphasis>, 
<emphasis role="strong">DAOS_OPC_POOL_EXCLUDE_OUT</emphasis>, 
<emphasis role="strong">DAOS_OPC_POOL_ADD</emphasis>, 

<emphasis role="strong">DAOS_OPC_POOL_QUERY</emphasis>, 
<emphasis role="strong">DAOS_OPC_POOL_QUERY_INFO</emphasis>, 
<emphasis role="strong">DAOS_OPC_POOL_LIST_ATTR</emphasis>, 
<emphasis role="strong">DAOS_OPC_POOL_GET_ATTR</emphasis>, 

<emphasis role="strong">DAOS_OPC_POOL_SET_ATTR</emphasis>, 
<emphasis role="strong">DAOS_OPC_POOL_DEL_ATTR</emphasis>, 
<emphasis role="strong">DAOS_OPC_POOL_STOP_SVC</emphasis>, 
<emphasis role="strong">DAOS_OPC_POOL_LIST_CONT</emphasis>, 

<link linkend="_group___tasks_1gga951c711321392d8d46a1447c17b89048a47bdddd15e1c886711b9ce3d7b78d4d4">DAOS_OPC_CONT_CREATE</link> = 18, 
<emphasis role="strong">DAOS_OPC_CONT_OPEN</emphasis>, 
<emphasis role="strong">DAOS_OPC_CONT_CLOSE</emphasis>, 
<emphasis role="strong">DAOS_OPC_CONT_DESTROY</emphasis>, 

<emphasis role="strong">DAOS_OPC_CONT_QUERY</emphasis>, 
<emphasis role="strong">DAOS_OPC_CONT_SET_PROP</emphasis>, 
<emphasis role="strong">DAOS_OPC_CONT_UPDATE_ACL</emphasis>, 
<emphasis role="strong">DAOS_OPC_CONT_DELETE_ACL</emphasis>, 

<emphasis role="strong">DAOS_OPC_CONT_AGGREGATE</emphasis>, 
<emphasis role="strong">DAOS_OPC_CONT_ROLLBACK</emphasis>, 
<emphasis role="strong">DAOS_OPC_CONT_SUBSCRIBE</emphasis>, 
<emphasis role="strong">DAOS_OPC_CONT_LIST_ATTR</emphasis>, 

<emphasis role="strong">DAOS_OPC_CONT_GET_ATTR</emphasis>, 
<emphasis role="strong">DAOS_OPC_CONT_SET_ATTR</emphasis>, 
<emphasis role="strong">DAOS_OPC_CONT_DEL_ATTR</emphasis>, 
<emphasis role="strong">DAOS_OPC_CONT_ALLOC_OIDS</emphasis>, 

<emphasis role="strong">DAOS_OPC_CONT_LIST_SNAP</emphasis>, 
<emphasis role="strong">DAOS_OPC_CONT_CREATE_SNAP</emphasis>, 
<emphasis role="strong">DAOS_OPC_CONT_DESTROY_SNAP</emphasis>, 
<link linkend="_group___tasks_1gga951c711321392d8d46a1447c17b89048a0ed8dee65ab1e8662c34e2ee69789044">DAOS_OPC_TX_OPEN</link> = 37, 

<emphasis role="strong">DAOS_OPC_TX_COMMIT</emphasis>, 
<emphasis role="strong">DAOS_OPC_TX_ABORT</emphasis>, 
<emphasis role="strong">DAOS_OPC_TX_OPEN_SNAP</emphasis>, 
<emphasis role="strong">DAOS_OPC_TX_CLOSE</emphasis>, 

<emphasis role="strong">DAOS_OPC_TX_RESTART</emphasis>, 
<link linkend="_group___tasks_1gga951c711321392d8d46a1447c17b89048aa1f921337ece65e7bb13796551789469">DAOS_OPC_OBJ_REGISTER_CLASS</link> = 43, 
<emphasis role="strong">DAOS_OPC_OBJ_QUERY_CLASS</emphasis>, 
<emphasis role="strong">DAOS_OPC_OBJ_LIST_CLASS</emphasis>, 

<emphasis role="strong">DAOS_OPC_OBJ_OPEN</emphasis>, 
<emphasis role="strong">DAOS_OPC_OBJ_CLOSE</emphasis>, 
<emphasis role="strong">DAOS_OPC_OBJ_PUNCH</emphasis>, 
<emphasis role="strong">DAOS_OPC_OBJ_PUNCH_DKEYS</emphasis>, 

<emphasis role="strong">DAOS_OPC_OBJ_PUNCH_AKEYS</emphasis>, 
<emphasis role="strong">DAOS_OPC_OBJ_QUERY</emphasis>, 
<emphasis role="strong">DAOS_OPC_OBJ_QUERY_KEY</emphasis>, 
<emphasis role="strong">DAOS_OPC_OBJ_SYNC</emphasis>, 

<emphasis role="strong">DAOS_OPC_OBJ_FETCH</emphasis>, 
<emphasis role="strong">DAOS_OPC_OBJ_UPDATE</emphasis>, 
<emphasis role="strong">DAOS_OPC_OBJ_LIST_DKEY</emphasis>, 
<emphasis role="strong">DAOS_OPC_OBJ_LIST_AKEY</emphasis>, 

<emphasis role="strong">DAOS_OPC_OBJ_LIST_RECX</emphasis>, 
<emphasis role="strong">DAOS_OPC_OBJ_LIST_OBJ</emphasis>, 
<link linkend="_group___tasks_1gga951c711321392d8d46a1447c17b89048ac56c6a450041ed1b59e82d4e3d21ff45">DAOS_OPC_ARRAY_CREATE</link> = 60, 
<emphasis role="strong">DAOS_OPC_ARRAY_OPEN</emphasis>, 

<emphasis role="strong">DAOS_OPC_ARRAY_CLOSE</emphasis>, 
<emphasis role="strong">DAOS_OPC_ARRAY_DESTROY</emphasis>, 
<emphasis role="strong">DAOS_OPC_ARRAY_READ</emphasis>, 
<emphasis role="strong">DAOS_OPC_ARRAY_WRITE</emphasis>, 

<emphasis role="strong">DAOS_OPC_ARRAY_PUNCH</emphasis>, 
<emphasis role="strong">DAOS_OPC_ARRAY_GET_SIZE</emphasis>, 
<emphasis role="strong">DAOS_OPC_ARRAY_SET_SIZE</emphasis>, 
<link linkend="_group___tasks_1gga951c711321392d8d46a1447c17b89048a9adadc21c62e2c0bef31d8747338c69d">DAOS_OPC_KV_OPEN</link> = 69, 

<emphasis role="strong">DAOS_OPC_KV_CLOSE</emphasis>, 
<emphasis role="strong">DAOS_OPC_KV_DESTROY</emphasis>, 
<emphasis role="strong">DAOS_OPC_KV_GET</emphasis>, 
<emphasis role="strong">DAOS_OPC_KV_PUT</emphasis>, 

<emphasis role="strong">DAOS_OPC_KV_REMOVE</emphasis>, 
<emphasis role="strong">DAOS_OPC_KV_LIST</emphasis>, 
<emphasis role="strong">DAOS_OPC_MAX</emphasis>
 }</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>int <link linkend="_group___tasks_1gaebfcc2bfe17ab29825bd985abffc9d83">daos_task_create</link> (<link linkend="_group___tasks_1ga951c711321392d8d46a1447c17b89048">daos_opc_t</link> opc, tse_sched_t *sched, unsigned int num_deps, tse_task_t *dep_tasks[], tse_task_t **taskp)</para>
</listitem>
            <listitem><para>int <link linkend="_group___tasks_1ga77841057a26e342a4d56629597ac37e0">daos_task_reset</link> (tse_task_t *task, <link linkend="_group___tasks_1ga951c711321392d8d46a1447c17b89048">daos_opc_t</link> opc)</para>
</listitem>
            <listitem><para>void * <link linkend="_group___tasks_1ga2292163341415fa814e3066a65418200">daos_task_get_args</link> (tse_task_t *task)</para>
</listitem>
            <listitem><para>void * <link linkend="_group___tasks_1ga867387b7979bd5093a54791e5cebe37a">daos_task_get_priv</link> (tse_task_t *task)</para>
</listitem>
            <listitem><para>void * <link linkend="_group___tasks_1gad1b90c638b6d30ffb61e45c762e245cb">daos_task_set_priv</link> (tse_task_t *task, void *priv)</para>
</listitem>
            <listitem><para>int <link linkend="_group___tasks_1gac2d3b0f1331ae42769f5d64dfa5f8a9e">daos_progress</link> (tse_sched_t *sched, int64_t timeout, bool *is_empty)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>(C) Copyright 2017-2021 Intel Corporation.</para>

<para>SPDX-License-Identifier: BSD-2-Clause-Patent DAOS task-based API </para>
</section>
<section>
<title>Typedef Documentation</title>
<anchor xml:id="_group___tasks_1ga9f66df8006f1c09f1da9d1deddee89bf"/>    <section>
    <title>daos_obj_fetch_t</title>
<indexterm><primary>daos_obj_fetch_t</primary><secondary>DAOS Tasks</secondary></indexterm>
<indexterm><primary>DAOS Tasks</primary><secondary>daos_obj_fetch_t</secondary></indexterm>
<para><computeroutput>typedef <link linkend="_structdaos__obj__rw__t">daos_obj_rw_t</link> <link linkend="_group___tasks_1ga9f66df8006f1c09f1da9d1deddee89bf">daos_obj_fetch_t</link></computeroutput></para>
<para>fetch args struct </para>
<para>
Definition at line 678 of file daos_task.h.</para>
    </section><anchor xml:id="_group___tasks_1ga5cf98970bc47d85da2169601c72ab869"/>    <section>
    <title>daos_obj_list_akey_t</title>
<indexterm><primary>daos_obj_list_akey_t</primary><secondary>DAOS Tasks</secondary></indexterm>
<indexterm><primary>DAOS Tasks</primary><secondary>daos_obj_list_akey_t</secondary></indexterm>
<para><computeroutput>typedef <link linkend="_structdaos__obj__list__t">daos_obj_list_t</link> <link linkend="_group___tasks_1ga5cf98970bc47d85da2169601c72ab869">daos_obj_list_akey_t</link></computeroutput></para>
<para>parameter subset for list_akey - <link linkend="_structdaos__handle__t">daos_handle_t</link> oh; <link linkend="_structdaos__handle__t">daos_handle_t</link> th; daos_key_t *dkey; uint32_t *nr; <link linkend="_structdaos__key__desc__t">daos_key_desc_t</link> *kds; d_sg_list_t *sgl; <link linkend="_structdaos__anchor__t">daos_anchor_t</link> *akey_anchor; </para>
<para>
Definition at line 760 of file daos_task.h.</para>
    </section><anchor xml:id="_group___tasks_1ga22f4eb5dd7ee7371ecec4137e8472ab9"/>    <section>
    <title>daos_obj_list_dkey_t</title>
<indexterm><primary>daos_obj_list_dkey_t</primary><secondary>DAOS Tasks</secondary></indexterm>
<indexterm><primary>DAOS Tasks</primary><secondary>daos_obj_list_dkey_t</secondary></indexterm>
<para><computeroutput>typedef <link linkend="_structdaos__obj__list__t">daos_obj_list_t</link> <link linkend="_group___tasks_1ga22f4eb5dd7ee7371ecec4137e8472ab9">daos_obj_list_dkey_t</link></computeroutput></para>
<para>parameter subset for list_dkey - <link linkend="_structdaos__handle__t">daos_handle_t</link> oh; <link linkend="_structdaos__handle__t">daos_handle_t</link> th; uint32_t *nr; <link linkend="_structdaos__key__desc__t">daos_key_desc_t</link> *kds; d_sg_list_t *sgl; <link linkend="_structdaos__anchor__t">daos_anchor_t</link> *dkey_anchor; </para>
<para>
Definition at line 748 of file daos_task.h.</para>
    </section><anchor xml:id="_group___tasks_1ga321ac64cbc20db9f075a4f85d3588bd8"/>    <section>
    <title>daos_obj_list_obj_t</title>
<indexterm><primary>daos_obj_list_obj_t</primary><secondary>DAOS Tasks</secondary></indexterm>
<indexterm><primary>DAOS Tasks</primary><secondary>daos_obj_list_obj_t</secondary></indexterm>
<para><computeroutput>typedef <link linkend="_structdaos__obj__list__t">daos_obj_list_t</link> <link linkend="_group___tasks_1ga321ac64cbc20db9f075a4f85d3588bd8">daos_obj_list_obj_t</link></computeroutput></para>
<para>parameter subset for list_obj - <link linkend="_structdaos__handle__t">daos_handle_t</link> oh; <link linkend="_structdaos__handle__t">daos_handle_t</link> th; daos_key_t *dkey; daos_key_t *akey; daos_size_t *size; uint32_t *nr; <link linkend="_structdaos__key__desc__t">daos_key_desc_t</link> *kds; <link linkend="_structdaos__recx__t">daos_recx_t</link> *recxs; <link linkend="_structdaos__epoch__range__t">daos_epoch_range_t</link> *eprs; d_sg_list_t *sgl; <link linkend="_structdaos__anchor__t">daos_anchor_t</link> *anchor; <link linkend="_structdaos__anchor__t">daos_anchor_t</link> *dkey_anchor; <link linkend="_structdaos__anchor__t">daos_anchor_t</link> *akey_anchor; uint32_t *versions; bool incr_order; </para>
<para>
Definition at line 797 of file daos_task.h.</para>
    </section><anchor xml:id="_group___tasks_1gaf14f0e9b9ad10d5b735c7de93502c49a"/>    <section>
    <title>daos_obj_list_recx_t</title>
<indexterm><primary>daos_obj_list_recx_t</primary><secondary>DAOS Tasks</secondary></indexterm>
<indexterm><primary>DAOS Tasks</primary><secondary>daos_obj_list_recx_t</secondary></indexterm>
<para><computeroutput>typedef <link linkend="_structdaos__obj__list__t">daos_obj_list_t</link> <link linkend="_group___tasks_1gaf14f0e9b9ad10d5b735c7de93502c49a">daos_obj_list_recx_t</link></computeroutput></para>
<para>parameter subset for list_recx - <link linkend="_structdaos__handle__t">daos_handle_t</link> oh; <link linkend="_structdaos__handle__t">daos_handle_t</link> th; daos_key_t *dkey; daos_key_t *akey; daos_size_t *size; daos_iod_type_t type; uint32_t *nr; <link linkend="_structdaos__recx__t">daos_recx_t</link> *recxs; <link linkend="_structdaos__epoch__range__t">daos_epoch_range_t</link> *eprs; <link linkend="_structdaos__anchor__t">daos_anchor_t</link> *anchor; uint32_t *versions; bool incr_order; </para>
<para>
Definition at line 777 of file daos_task.h.</para>
    </section><anchor xml:id="_group___tasks_1gaa22debbfb9988e9be6a54bb4a86f6925"/>    <section>
    <title>daos_obj_update_t</title>
<indexterm><primary>daos_obj_update_t</primary><secondary>DAOS Tasks</secondary></indexterm>
<indexterm><primary>DAOS Tasks</primary><secondary>daos_obj_update_t</secondary></indexterm>
<para><computeroutput>typedef <link linkend="_structdaos__obj__rw__t">daos_obj_rw_t</link> <link linkend="_group___tasks_1gaa22debbfb9988e9be6a54bb4a86f6925">daos_obj_update_t</link></computeroutput></para>
<para>update args struct </para>
<para>
Definition at line 680 of file daos_task.h.</para>
</section>
</section>
<section>
<title>Enumeration Type Documentation</title>
<anchor xml:id="_group___tasks_1ga951c711321392d8d46a1447c17b89048"/>    <section>
    <title>daos_opc_t</title>
<indexterm><primary>daos_opc_t</primary><secondary>DAOS Tasks</secondary></indexterm>
<indexterm><primary>DAOS Tasks</primary><secondary>daos_opc_t</secondary></indexterm>
<para><computeroutput>enum <link linkend="_group___tasks_1ga951c711321392d8d46a1447c17b89048">daos_opc_t</link></computeroutput></para>
<para>DAOS operation codes for task creation </para>
<informaltable frame="all">
<title>Enumerator</title>
    <tgroup cols="2" align="left" colsep="1" rowsep="1">
      <colspec colname='c1'/>
      <colspec colname='c2'/>
<tbody>
<row><entry><indexterm><primary>DAOS_OPC_SET_PARAMS</primary><secondary>DAOS Tasks</secondary></indexterm>
<indexterm><primary>DAOS Tasks</primary><secondary>DAOS_OPC_SET_PARAMS</secondary></indexterm>
<anchor xml:id="_group___tasks_1gga951c711321392d8d46a1447c17b89048ac8bbeee791f6511f481780ae7f4cc7b2"/>DAOS_OPC_SET_PARAMS</entry><entry>
<para>Management APIs </para>
</entry></row><row><entry><indexterm><primary>DAOS_OPC_POOL_CONNECT</primary><secondary>DAOS Tasks</secondary></indexterm>
<indexterm><primary>DAOS Tasks</primary><secondary>DAOS_OPC_POOL_CONNECT</secondary></indexterm>
<anchor xml:id="_group___tasks_1gga951c711321392d8d46a1447c17b89048a9e58564032c6cd145f1aec2591eddcde"/>DAOS_OPC_POOL_CONNECT</entry><entry>
<para>Pool APIs </para>
</entry></row><row><entry><indexterm><primary>DAOS_OPC_CONT_CREATE</primary><secondary>DAOS Tasks</secondary></indexterm>
<indexterm><primary>DAOS Tasks</primary><secondary>DAOS_OPC_CONT_CREATE</secondary></indexterm>
<anchor xml:id="_group___tasks_1gga951c711321392d8d46a1447c17b89048a47bdddd15e1c886711b9ce3d7b78d4d4"/>DAOS_OPC_CONT_CREATE</entry><entry>
<para>Container APIs </para>
</entry></row><row><entry><indexterm><primary>DAOS_OPC_TX_OPEN</primary><secondary>DAOS Tasks</secondary></indexterm>
<indexterm><primary>DAOS Tasks</primary><secondary>DAOS_OPC_TX_OPEN</secondary></indexterm>
<anchor xml:id="_group___tasks_1gga951c711321392d8d46a1447c17b89048a0ed8dee65ab1e8662c34e2ee69789044"/>DAOS_OPC_TX_OPEN</entry><entry>
<para>Transaction APIs </para>
</entry></row><row><entry><indexterm><primary>DAOS_OPC_OBJ_REGISTER_CLASS</primary><secondary>DAOS Tasks</secondary></indexterm>
<indexterm><primary>DAOS Tasks</primary><secondary>DAOS_OPC_OBJ_REGISTER_CLASS</secondary></indexterm>
<anchor xml:id="_group___tasks_1gga951c711321392d8d46a1447c17b89048aa1f921337ece65e7bb13796551789469"/>DAOS_OPC_OBJ_REGISTER_CLASS</entry><entry>
<para>Object APIs </para>
</entry></row><row><entry><indexterm><primary>DAOS_OPC_ARRAY_CREATE</primary><secondary>DAOS Tasks</secondary></indexterm>
<indexterm><primary>DAOS Tasks</primary><secondary>DAOS_OPC_ARRAY_CREATE</secondary></indexterm>
<anchor xml:id="_group___tasks_1gga951c711321392d8d46a1447c17b89048ac56c6a450041ed1b59e82d4e3d21ff45"/>DAOS_OPC_ARRAY_CREATE</entry><entry>
<para>Array APIs </para>
</entry></row><row><entry><indexterm><primary>DAOS_OPC_KV_OPEN</primary><secondary>DAOS Tasks</secondary></indexterm>
<indexterm><primary>DAOS Tasks</primary><secondary>DAOS_OPC_KV_OPEN</secondary></indexterm>
<anchor xml:id="_group___tasks_1gga951c711321392d8d46a1447c17b89048a9adadc21c62e2c0bef31d8747338c69d"/>DAOS_OPC_KV_OPEN</entry><entry>
<para>KV APIs </para>
</entry></row>    </tbody>
    </tgroup>
</informaltable>
<para>
Definition at line 32 of file daos_task.h.</para>
</section>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_group___tasks_1gac2d3b0f1331ae42769f5d64dfa5f8a9e"/>    <section>
    <title>daos_progress()</title>
<indexterm><primary>daos_progress</primary><secondary>DAOS Tasks</secondary></indexterm>
<indexterm><primary>DAOS Tasks</primary><secondary>daos_progress</secondary></indexterm>
<para><computeroutput>int daos_progress (tse_sched_t * sched, int64_t timeout, bool * is_empty)</computeroutput></para>
<para>Make progress on the RPC context associated with the scheduler and schedule tasks that are ready. Also check if the scheduler has any tasks.</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>sched</entry>
                                <entry>
<para>[IN] Scheduler to make progress on. </para>
</entry>
                            </row>
                            <row>
                                <entry>timeout</entry>
                                <entry>
<para>[IN] How long is caller going to wait (micro-second) if <emphasis>timeout</emphasis> &gt; 0, it can also be DAOS_EQ_NOWAIT, DAOS_EQ_WAIT </para>
</entry>
                            </row>
                            <row>
                                <entry>is_empty</entry>
                                <entry>
<para>[OUT] flag to indicate whether the scheduler is empty or not.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>0 if Success, negative DER if failed. </para>
</formalpara>
</para>
    </section><anchor xml:id="_group___tasks_1gaebfcc2bfe17ab29825bd985abffc9d83"/>    <section>
    <title>daos_task_create()</title>
<indexterm><primary>daos_task_create</primary><secondary>DAOS Tasks</secondary></indexterm>
<indexterm><primary>DAOS Tasks</primary><secondary>daos_task_create</secondary></indexterm>
<para><computeroutput>int daos_task_create (<link linkend="_group___tasks_1ga951c711321392d8d46a1447c17b89048">daos_opc_t</link> opc, tse_sched_t * sched, unsigned int num_deps, tse_task_t * dep_tasks[], tse_task_t ** taskp)</computeroutput></para>
<para>Create an asynchronous task and associate it with a daos client operation. For synchronous operations please use the specific API for that operation. Typically this API is used for use cases where a list of daos operations need to be queued into the DAOS async engines with specific dependencies for order of execution between those tasks. For example, a user can create task to open an object then update that object with a dependency inserted on the update to the open task. For a simpler workflow, users can use the event based API instead of tasks.</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>opc</entry>
                                <entry>
<para>[IN] Operation Code to identify the daos op to associate with the task, </para>
</entry>
                            </row>
                            <row>
                                <entry>sched</entry>
                                <entry>
<para>[IN] Scheduler / Engine this task will be added to. </para>
</entry>
                            </row>
                            <row>
                                <entry>num_deps</entry>
                                <entry>
<para>[IN] Number of tasks this task depends on before it gets scheduled. No tasks can be in progress. </para>
</entry>
                            </row>
                            <row>
                                <entry>dep_tasks</entry>
                                <entry>
<para>[IN] Array of tasks that new task will wait on completion before it&apos;s scheduled. </para>
</entry>
                            </row>
                            <row>
                                <entry>taskp</entry>
                                <entry>
<para>[OUT] Pointer to task to be created/initialized with the op.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>0 Success -DER_INVAL Invalid parameter -DER_NOSYS Unsupported opc </para>
</formalpara>
</para>
    </section><anchor xml:id="_group___tasks_1ga2292163341415fa814e3066a65418200"/>    <section>
    <title>daos_task_get_args()</title>
<indexterm><primary>daos_task_get_args</primary><secondary>DAOS Tasks</secondary></indexterm>
<indexterm><primary>DAOS Tasks</primary><secondary>daos_task_get_args</secondary></indexterm>
<para><computeroutput>void* daos_task_get_args (tse_task_t * task)</computeroutput></para>
<para>Return a pointer to the DAOS task argument structure. This is called to set the arguments for the task before being scheduled, typically after it&apos;s created or in its prepare cb. The task must be created with <link linkend="_group___tasks_1gaebfcc2bfe17ab29825bd985abffc9d83">daos_task_create()</link> and a valid DAOS opc.</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>task</entry>
                                <entry>
<para>[IN] Task to retrieve the struct from.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>Success: Pointer to arguments for the DAOS task </para>
</formalpara>
</para>
    </section><anchor xml:id="_group___tasks_1ga867387b7979bd5093a54791e5cebe37a"/>    <section>
    <title>daos_task_get_priv()</title>
<indexterm><primary>daos_task_get_priv</primary><secondary>DAOS Tasks</secondary></indexterm>
<indexterm><primary>DAOS Tasks</primary><secondary>daos_task_get_priv</secondary></indexterm>
<para><computeroutput>void* daos_task_get_priv (tse_task_t * task)</computeroutput></para>
<para>Return a pointer to the DAOS task private state. If no private state has been set (via <link linkend="_group___tasks_1ga867387b7979bd5093a54791e5cebe37a">daos_task_get_priv()</link>), NULL is returned.</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>task</entry>
                                <entry>
<para>[IN] Task to retrieve the private state from</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>Pointer to the private state </para>
</formalpara>
</para>
    </section><anchor xml:id="_group___tasks_1ga77841057a26e342a4d56629597ac37e0"/>    <section>
    <title>daos_task_reset()</title>
<indexterm><primary>daos_task_reset</primary><secondary>DAOS Tasks</secondary></indexterm>
<indexterm><primary>DAOS Tasks</primary><secondary>daos_task_reset</secondary></indexterm>
<para><computeroutput>int daos_task_reset (tse_task_t * task, <link linkend="_group___tasks_1ga951c711321392d8d46a1447c17b89048">daos_opc_t</link> opc)</computeroutput></para>
<para>Reset a DAOS task with another opcode. The task must have been completed or not in the running state yet, and has not been freed yet (use must take a ref count on the task to prevent it to be freed after the DAOS operation has completed).</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>task</entry>
                                <entry>
<para>[IN] Task to reset. </para>
</entry>
                            </row>
                            <row>
                                <entry>opc</entry>
                                <entry>
<para>[IN] Operation code to identify the daos op to associate with the task.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>0 Success -DER_INVAL Invalid parameter -DER_NOSYS Unsupported opc </para>
</formalpara>
</para>
    </section><anchor xml:id="_group___tasks_1gad1b90c638b6d30ffb61e45c762e245cb"/>    <section>
    <title>daos_task_set_priv()</title>
<indexterm><primary>daos_task_set_priv</primary><secondary>DAOS Tasks</secondary></indexterm>
<indexterm><primary>DAOS Tasks</primary><secondary>daos_task_set_priv</secondary></indexterm>
<para><computeroutput>void* daos_task_set_priv (tse_task_t * task, void * priv)</computeroutput></para>
<para>Set a pointer to the DAOS task private state.</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>task</entry>
                                <entry>
<para>[IN] Task to retrieve the private state from </para>
</entry>
                            </row>
                            <row>
                                <entry>priv</entry>
                                <entry>
<para>[IN] Pointer to the private state</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>private state set by the previous call </para>
</formalpara>
</para>
</section>
</section>
</section>
