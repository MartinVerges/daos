<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_structduns__attr__t">
<title>duns_attr_t Struct Reference</title>
<indexterm><primary>duns_attr_t</primary></indexterm>
<para>
<computeroutput>#include &lt;daos_uns.h&gt;</computeroutput>
</para>
<simplesect>
    <title>Data Fields    </title>
        <itemizedlist>
            <listitem><para>daos_cont_layout_t <link linkend="_structduns__attr__t_1a32d05946dea4e65b637400b0a80642ff">da_type</link></para>
</listitem>
            <listitem><para><link linkend="_group___obj_class_1ga697f542a81cf2b46e3642a31ad289728">daos_oclass_id_t</link> <link linkend="_structduns__attr__t_1af3603cd1c7440c516bb372e91a0670a5">da_oclass_id</link></para>
</listitem>
            <listitem><para><link linkend="_group___types_1gaef45c835fcfbd5f969030fd7c854eb8a">daos_size_t</link> <link linkend="_structduns__attr__t_1a99f0686f082c91df320c81a642ec949b">da_chunk_size</link></para>
</listitem>
            <listitem><para><link linkend="_structdaos__prop__t">daos_prop_t</link> * <link linkend="_structduns__attr__t_1a73ad14cfecf638b05eaa683f14698664">da_props</link></para>
</listitem>
            <listitem><para>uint32_t <link linkend="_structduns__attr__t_1a5556c0ee730a964b4d1fc394c166e341">da_flags</link></para>
</listitem>
            <listitem><para>char <link linkend="_structduns__attr__t_1a51c6bc0f6cccfa26ea27ad342c9b1366">da_pool</link> [<link linkend="_group___pool_container_1gaee6fdbbe2d6446abf130688bcb43cf13">DAOS_PROP_LABEL_MAX_LEN</link>+1]</para>
</listitem>
            <listitem><para>char <link linkend="_structduns__attr__t_1a94c125230620d30cd20feb104bc6f5c8">da_cont</link> [<link linkend="_group___pool_container_1gaee6fdbbe2d6446abf130688bcb43cf13">DAOS_PROP_LABEL_MAX_LEN</link>+1]</para>
</listitem>
            <listitem><para>char * <link linkend="_structduns__attr__t_1ae60b72f5c1cfb5453ca27c4229177e90">da_sys</link></para>
</listitem>
            <listitem><para>char * <link linkend="_structduns__attr__t_1af0f842f991aa29359ee887439833444b">da_rel_path</link></para>
</listitem>
            <listitem><para>bool <link linkend="_structduns__attr__t_1a8f477678a941562c30f7c9e90b970bdb">da_on_lustre</link></para>
</listitem>
            <listitem><para>bool <link linkend="_structduns__attr__t_1a08d3b868354a0ef0467f4fe179eac548">da_no_prefix</link></para>
</listitem>
            <listitem><para>uuid_t <link linkend="_structduns__attr__t_1a41bedeb8f489555294077744e941c9ef">da_puuid</link></para>
</listitem>
            <listitem><para>uuid_t <link linkend="_structduns__attr__t_1afc6bc2480780108746dddb38a10b932e">da_cuuid</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>struct that has the values to make the connection from the UNS to DAOS </para>
<para>
Definition at line 51 of file daos_uns.h.</para>
</section>
<section>
<title>Field Documentation</title>
<anchor xml:id="_structduns__attr__t_1a99f0686f082c91df320c81a642ec949b"/>    <section>
    <title>da_chunk_size</title>
<indexterm><primary>da_chunk_size</primary><secondary>duns_attr_t</secondary></indexterm>
<indexterm><primary>duns_attr_t</primary><secondary>da_chunk_size</secondary></indexterm>
<para><computeroutput><link linkend="_group___types_1gaef45c835fcfbd5f969030fd7c854eb8a">daos_size_t</link> da_chunk_size</computeroutput></para>
<para>IN: (Optional) For a POSIX container, set a default chunk size for all files. </para>
<para>
Definition at line 57 of file daos_uns.h.</para>
    </section><anchor xml:id="_structduns__attr__t_1a94c125230620d30cd20feb104bc6f5c8"/>    <section>
    <title>da_cont</title>
<indexterm><primary>da_cont</primary><secondary>duns_attr_t</secondary></indexterm>
<indexterm><primary>duns_attr_t</primary><secondary>da_cont</secondary></indexterm>
<para><computeroutput>char da_cont[<link linkend="_group___pool_container_1gaee6fdbbe2d6446abf130688bcb43cf13">DAOS_PROP_LABEL_MAX_LEN</link>+1]</computeroutput></para>
<para>OUT: Container UUID or label string.</para>

<para>On <link linkend="_group___u_n_s_1gabdbf8f5eb7ab131249f3675fc1b3c653">duns_resolve_path()</link>, a UUID string is returned for the container that was stored on that path. If the path is a direct path, we parse the second entry (cont) in the path as either a UUID or a label. This can be used in <link linkend="_group___containers_1ga426a8e88774116475ff60291e3a1280d">daos_cont_open()</link> regardless of whether it&apos;s a UUID or label. on <link linkend="_group___u_n_s_1gaed5d956858070fac62f6effe9c6540e1">duns_create_path()</link>, the uuid of the container created is also populated in this field. </para>
<para>
Definition at line 83 of file daos_uns.h.</para>
    </section><anchor xml:id="_structduns__attr__t_1afc6bc2480780108746dddb38a10b932e"/>    <section>
    <title>da_cuuid</title>
<indexterm><primary>da_cuuid</primary><secondary>duns_attr_t</secondary></indexterm>
<indexterm><primary>duns_attr_t</primary><secondary>da_cuuid</secondary></indexterm>
<para><computeroutput>uuid_t da_cuuid</computeroutput></para>
<para>IN/OUT: (Deprecated) Optional UUID of the cont to be created in <link linkend="_group___u_n_s_1gaed5d956858070fac62f6effe9c6540e1">duns_create_path()</link>.</para>

<para>The UUID will be used to create the container in <link linkend="_group___u_n_s_1gaed5d956858070fac62f6effe9c6540e1">duns_create_path()</link> if set, otherwise a random one will be generated. The cont UUID or label is returned as a string in <emphasis>da_cont</emphasis> with <link linkend="_group___u_n_s_1gabdbf8f5eb7ab131249f3675fc1b3c653">duns_resolve_path()</link>. </para>
<para>
Definition at line 119 of file daos_uns.h.</para>
    </section><anchor xml:id="_structduns__attr__t_1a5556c0ee730a964b4d1fc394c166e341"/>    <section>
    <title>da_flags</title>
<indexterm><primary>da_flags</primary><secondary>duns_attr_t</secondary></indexterm>
<indexterm><primary>duns_attr_t</primary><secondary>da_flags</secondary></indexterm>
<para><computeroutput>uint32_t da_flags</computeroutput></para>
<para>IN: access flags</para>

<para>DUNS_NO_PREFIX DUNS_NO_REVERSE_LOOKUP DUNS_NO_CHECK_PATH: </para>
<para>
Definition at line 66 of file daos_uns.h.</para>
    </section><anchor xml:id="_structduns__attr__t_1a08d3b868354a0ef0467f4fe179eac548"/>    <section>
    <title>da_no_prefix</title>
<indexterm><primary>da_no_prefix</primary><secondary>duns_attr_t</secondary></indexterm>
<indexterm><primary>duns_attr_t</primary><secondary>da_no_prefix</secondary></indexterm>
<para><computeroutput>bool da_no_prefix</computeroutput></para>
<para>IN: (Deprecated - use flags) String does not include daos:// prefix</para>

<para>Path that is passed does not have daos: prefix but is direct: (/pool/cont/xyz) and does not need to parse a path for the UNS attrs. This is usually set to false. </para>
<para>
Definition at line 106 of file daos_uns.h.</para>
    </section><anchor xml:id="_structduns__attr__t_1af3603cd1c7440c516bb372e91a0670a5"/>    <section>
    <title>da_oclass_id</title>
<indexterm><primary>da_oclass_id</primary><secondary>duns_attr_t</secondary></indexterm>
<indexterm><primary>duns_attr_t</primary><secondary>da_oclass_id</secondary></indexterm>
<para><computeroutput><link linkend="_group___obj_class_1ga697f542a81cf2b46e3642a31ad289728">daos_oclass_id_t</link> da_oclass_id</computeroutput></para>
<para>IN: (Optional) For a POSIX container, set a default object class for all objects. </para>
<para>
Definition at line 55 of file daos_uns.h.</para>
    </section><anchor xml:id="_structduns__attr__t_1a8f477678a941562c30f7c9e90b970bdb"/>    <section>
    <title>da_on_lustre</title>
<indexterm><primary>da_on_lustre</primary><secondary>duns_attr_t</secondary></indexterm>
<indexterm><primary>duns_attr_t</primary><secondary>da_on_lustre</secondary></indexterm>
<para><computeroutput>bool da_on_lustre</computeroutput></para>
<para>OUT: This is set to true if path is on Lustre filesystem </para>
<para>
Definition at line 100 of file daos_uns.h.</para>
    </section><anchor xml:id="_structduns__attr__t_1a51c6bc0f6cccfa26ea27ad342c9b1366"/>    <section>
    <title>da_pool</title>
<indexterm><primary>da_pool</primary><secondary>duns_attr_t</secondary></indexterm>
<indexterm><primary>duns_attr_t</primary><secondary>da_pool</secondary></indexterm>
<para><computeroutput>char da_pool[<link linkend="_group___pool_container_1gaee6fdbbe2d6446abf130688bcb43cf13">DAOS_PROP_LABEL_MAX_LEN</link>+1]</computeroutput></para>
<para>OUT: Pool UUID or label string.</para>

<para>On <link linkend="_group___u_n_s_1gabdbf8f5eb7ab131249f3675fc1b3c653">duns_resolve_path()</link>, a UUID string is returned for the pool that was stored on that path. If the path is a direct path, we parse the first entry (pool) in the path as either a UUID or a label. This can be used in <link linkend="_group___pools_1ga604e2af3821c31a6ea692a39866200bb">daos_pool_connect()</link> regardless of whether it&apos;s a UUID or label. </para>
<para>
Definition at line 74 of file daos_uns.h.</para>
    </section><anchor xml:id="_structduns__attr__t_1a73ad14cfecf638b05eaa683f14698664"/>    <section>
    <title>da_props</title>
<indexterm><primary>da_props</primary><secondary>duns_attr_t</secondary></indexterm>
<indexterm><primary>duns_attr_t</primary><secondary>da_props</secondary></indexterm>
<para><computeroutput><link linkend="_structdaos__prop__t">daos_prop_t</link>* da_props</computeroutput></para>
<para>IN: (Optional Container props to be added with duns_path_create </para>
<para>
Definition at line 59 of file daos_uns.h.</para>
    </section><anchor xml:id="_structduns__attr__t_1a41bedeb8f489555294077744e941c9ef"/>    <section>
    <title>da_puuid</title>
<indexterm><primary>da_puuid</primary><secondary>duns_attr_t</secondary></indexterm>
<indexterm><primary>duns_attr_t</primary><secondary>da_puuid</secondary></indexterm>
<para><computeroutput>uuid_t da_puuid</computeroutput></para>
<para>IN/OUT: (Deprecated) Pool UUID of the container to be created in <link linkend="_group___u_n_s_1gaed5d956858070fac62f6effe9c6540e1">duns_create_path()</link>.</para>

<para>The pool UUID is now obtained from the pool handle in <link linkend="_group___u_n_s_1gaed5d956858070fac62f6effe9c6540e1">duns_create_path()</link>. The pool UUID is returned as a string in <emphasis>da_pool</emphasis> with <link linkend="_group___u_n_s_1gabdbf8f5eb7ab131249f3675fc1b3c653">duns_resolve_path()</link>. </para>
<para>
Definition at line 112 of file daos_uns.h.</para>
    </section><anchor xml:id="_structduns__attr__t_1af0f842f991aa29359ee887439833444b"/>    <section>
    <title>da_rel_path</title>
<indexterm><primary>da_rel_path</primary><secondary>duns_attr_t</secondary></indexterm>
<indexterm><primary>duns_attr_t</primary><secondary>da_rel_path</secondary></indexterm>
<para><computeroutput>char* da_rel_path</computeroutput></para>
<para>OUT: Relative component of path from where the UNS entry is located (returned on <link linkend="_group___u_n_s_1gabdbf8f5eb7ab131249f3675fc1b3c653">duns_resolve_path()</link>).</para>

<para>This is returned if the UNS entry is not the last entry in the path, and the UNS library performs a reverse lookup to find a UNS entry in the path. To check only the last entry in the path and not return this relative path to that entry, set DUNS_NO_REVERSE_LOOKUP on <emphasis>da_flags</emphasis>. </para>
<para>
Definition at line 98 of file daos_uns.h.</para>
    </section><anchor xml:id="_structduns__attr__t_1ae60b72f5c1cfb5453ca27c4229177e90"/>    <section>
    <title>da_sys</title>
<indexterm><primary>da_sys</primary><secondary>duns_attr_t</secondary></indexterm>
<indexterm><primary>duns_attr_t</primary><secondary>da_sys</secondary></indexterm>
<para><computeroutput>char* da_sys</computeroutput></para>
<para>OUT: DAOS System Name. (The UNS does not maintain this yet, and this is not set)</para>

<para>On <link linkend="_group___u_n_s_1gabdbf8f5eb7ab131249f3675fc1b3c653">duns_resolve_path()</link>, the daos system name is returned that can be used on <link linkend="_group___pools_1ga604e2af3821c31a6ea692a39866200bb">daos_pool_connect()</link>. </para>
<para>
Definition at line 89 of file daos_uns.h.</para>
    </section><anchor xml:id="_structduns__attr__t_1a32d05946dea4e65b637400b0a80642ff"/>    <section>
    <title>da_type</title>
<indexterm><primary>da_type</primary><secondary>duns_attr_t</secondary></indexterm>
<indexterm><primary>duns_attr_t</primary><secondary>da_type</secondary></indexterm>
<para><computeroutput>daos_cont_layout_t da_type</computeroutput></para>
<para>IN/OUT: Container layout (POSIX, HDF5, Python, etc.) </para>
<para>
Definition at line 53 of file daos_uns.h.</para>
</section>
<para>
The documentation for this struct was generated from the following file:</para>
src/include/daos_uns.h</section>
</section>
